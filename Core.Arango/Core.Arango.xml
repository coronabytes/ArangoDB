<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Core.Arango</name>
    </assembly>
    <members>
        <member name="T:Core.Arango.ArangoConfiguration">
            <summary>
                Driver configuration.
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoConfiguration.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.ConnectionString">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.Realm">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.Server">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.User">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.Password">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.BatchSize">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.Serializer">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.Transport">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.QueryProfile">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.HttpClient">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.AllowDirtyRead">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.Endpoints">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.ResolveProperty">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.ResolveCollection">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoConfiguration.ResolveGroupBy">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.ArangoContext">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.ArangoContext.#ctor(Core.Arango.IArangoConfiguration)">
            <summary>
            </summary>
            <param name="config">configuration</param>
        </member>
        <member name="M:Core.Arango.ArangoContext.#ctor(System.String,Core.Arango.IArangoConfiguration)">
            <summary>
            </summary>
            <param name="cs">connection string</param>
            <param name="settings">settings</param>
        </member>
        <member name="P:Core.Arango.ArangoContext.User">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Database">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Collection">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.View">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Graph">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Transaction">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Document">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Query">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Index">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Analyzer">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Function">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Configuration">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Foxx">
            <inheritdoc />
        </member>
        <member name="P:Core.Arango.ArangoContext.Backup">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.ArangoContext.GetVersionAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.ArangoContext.GetEndpointsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.ArangoDependencyInjectionExtension">
            <summary>
                Arango dependency injection for ASP.NET Core
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoDependencyInjectionExtension.AddArango(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,System.String})">
            <summary>
                Add Arango service (singleton)
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoDependencyInjectionExtension.AddArango(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,Core.Arango.IArangoConfiguration})">
            <summary>
                Add Arango service (singleton)
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoDependencyInjectionExtension.AddArango(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,Core.Arango.IArangoConfiguration)">
            <summary>
                Add Arango service (singleton)
            </summary>
        </member>
        <member name="T:Core.Arango.ArangoErrorCode">
            <summary>
                Arango error codes in exception
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNoError">
            <summary>No error has occurred.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorFailed">
            <summary>Will be raised when a general error occurred.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSysError">
            <summary>Will be raised when operating system error occurred.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorOutOfMemory">
            <summary>Will be raised when there is a memory shortage.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorInternal">
            <summary>Will be raised when an internal error occurred.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorIllegalNumber">
            <summary>Will be raised when an illegal representation of a number was given.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNumericOverflow">
            <summary>Will be raised when a numeric overflow occurred.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorIllegalOption">
            <summary>Will be raised when an unknown option was supplied by the user.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorDeadPid">
            <summary>Will be raised when a PID without a living process was found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNotImplemented">
            <summary>Will be raised when hitting an unimplemented feature.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorBadParameter">
            <summary>Will be raised when the parameter does not fulfill the requirements.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorForbidden">
            <summary>Will be raised when you are missing permission for the operation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorOutOfMemoryMmap">
            <summary>Will be raised when there is a memory shortage.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCorruptedCsv">
            <summary>Will be raised when encountering a corrupt csv line.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorFileNotFound">
            <summary>Will be raised when a file is not found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCannotWriteFile">
            <summary>Will be raised when a file cannot be written.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCannotOverwriteFile">
            <summary>Will be raised when an attempt is made to overwrite an existing file.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTypeError">
            <summary>Will be raised when a type error is encountered.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLockTimeout">
            <summary>Will be raised when there’s a timeout waiting for a lock.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCannotCreateDirectory">
            <summary>Will be raised when an attempt to create a directory fails.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCannotCreateTempFile">
            <summary>Will be raised when an attempt to create a temporary file fails.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorRequestCanceled">
            <summary>Will be raised when a request is canceled by the user.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorDebug">
            <summary>Will be raised intentionally during debugging.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorIpAddressInvalid">
            <summary>Will be raised when the structure of an IP address is invalid.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorFileExists">
            <summary>Will be raised when a file already exists.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLocked">
            <summary>Will be raised when a resource or an operation is locked.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorDeadlock">
            <summary>Will be raised when a deadlock is detected when accessing collections.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorShuttingDown">
            <summary>Will be raised when a call cannot succeed because a server shutdown is already in progress.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorOnlyEnterprise">
            <summary>Will be raised when an Enterprise Edition feature is requested from the Community Edition.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorResourceLimit">
            <summary>Will be raised when the resources used by an operation exceed the configured maximum value.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIcuError">
            <summary>will be raised if icu operations failed</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCannotReadFile">
            <summary>Will be raised when a file cannot be read.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorIncompatibleVersion">
            <summary>Will be raised when a server is running an incompatible version of ArangoDB.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorDisabled">
            <summary>Will be raised when a requested resource is not enabled.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpBadParameter">
            <summary>Will be raised when the HTTP request does not fulfill the requirements.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpUnauthorized">
            <summary>Will be raised when authorization is required but the user is not authorized.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpForbidden">
            <summary>Will be raised when the operation is forbidden.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpNotFound">
            <summary>Will be raised when an URI is unknown.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpMethodNotAllowed">
            <summary>Will be raised when an unsupported HTTP method is used for an operation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpNotAcceptable">
            <summary>Will be raised when an unsupported HTTP content type is used for an operation</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpPreconditionFailed">
            <summary>Will be raised when a precondition for an HTTP request is not met.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpServerError">
            <summary>Will be raised when an internal server is encountered.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpServiceUnavailable">
            <summary>Will be raised when a service is temporarily unavailable.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpGatewayTimeout">
            <summary>Will be raised when a service contacted by ArangoDB does not respond in a timely manner.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpCorruptedJson">
            <summary>Will be raised when a string representation of a JSON object is corrupt.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHttpSuperfluousSuffices">
            <summary>Will be raised when the URL contains superfluous suffices.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIllegalState">
            <summary>Internal error that will be raised when the datafile is not in the required state.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatafileSealed">
            <summary>Internal error that will be raised when trying to write to a datafile.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoReadOnly">
            <summary>Internal error that will be raised when trying to write to a read-only datafile or collection.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDuplicateIdentifier">
            <summary>Internal error that will be raised when a identifier duplicate is detected.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatafileUnreadable">
            <summary>Internal error that will be raised when a datafile is unreadable.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatafileEmpty">
            <summary>Internal error that will be raised when a datafile is empty.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoRecovery">
            <summary>Will be raised when an error occurred during WAL log file recovery.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatafileStatisticsNotFound">
            <summary>Will be raised when a required datafile statistics object was not found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCorruptedDatafile">
            <summary>Will be raised when a corruption is detected in a datafile.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIllegalParameterFile">
            <summary>Will be raised if a parameter file is corrupted or cannot be read.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCorruptedCollection">
            <summary>Will be raised when a collection contains one or more corrupted data files.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoMmapFailed">
            <summary>Will be raised when the system call mmap failed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoFilesystemFull">
            <summary>Will be raised when the filesystem is full.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoNoJournal">
            <summary>Will be raised when a journal cannot be created.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatafileAlreadyExists">
            <summary>Will be raised when the datafile cannot be created or renamed because a file of the same name already exists.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatadirLocked">
            <summary>Will be raised when the database directory is locked by a different process.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCollectionDirectoryAlreadyExists">
            <summary>Will be raised when the collection cannot be created because a directory of the same name already exists.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoMsyncFailed">
            <summary>Will be raised when the system call msync failed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatadirUnlockable">
            <summary>Will be raised when the server cannot lock the database directory on startup.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoSyncTimeout">
            <summary>Will be raised when the server waited too long for a datafile to be synced to disk.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoConflict">
            <summary>Will be raised when updating or deleting a document and a conflict has been detected.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatadirInvalid">
            <summary>Will be raised when a non-existing database directory was specified when starting the database.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDocumentNotFound">
            <summary>Will be raised when a document with a given identifier is unknown.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDataSourceNotFound">
            <summary>Will be raised when a collection or View with the given identifier or name is unknown.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCollectionParameterMissing">
            <summary>Will be raised when the collection parameter is missing.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDocumentHandleBad">
            <summary>Will be raised when a document identifier is corrupt.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoMaximalSizeTooSmall">
            <summary>Will be raised when the maximal size of the journal is too small.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDuplicateName">
            <summary>Will be raised when a name duplicate is detected.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIllegalName">
            <summary>Will be raised when an illegal name is detected.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoNoIndex">
            <summary>Will be raised when no suitable index for the query is known.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoUniqueConstraintViolated">
            <summary>Will be raised when there is a unique constraint violation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIndexNotFound">
            <summary>Will be raised when an index with a given identifier is unknown.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCrossCollectionRequest">
            <summary>Will be raised when a cross-collection is requested.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIndexHandleBad">
            <summary>Will be raised when a index identifier is corrupt.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDocumentTooLarge">
            <summary>Will be raised when the document cannot fit into any datafile because of it is too large.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCollectionNotUnloaded">
            <summary>Will be raised when a collection should be unloaded</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCollectionTypeInvalid">
            <summary>Will be raised when an invalid collection type is used in a request.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoAttributeParserFailed">
            <summary>Will be raised when parsing an attribute name definition failed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDocumentKeyBad">
            <summary>Will be raised when a document key is corrupt.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDocumentKeyUnexpected">
            <summary>Will be raised when a user-defined document key is supplied for collections with auto key generation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatadirNotWritable">
            <summary>Will be raised when the server’s database directory is not writable for the current user.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoOutOfKeys">
            <summary>Will be raised when a key generator runs out of keys.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDocumentKeyMissing">
            <summary>Will be raised when a document key is missing.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDocumentTypeInvalid">
            <summary>Will be raised when there is an attempt to create a document with an invalid type.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatabaseNotFound">
            <summary>Will be raised when a non-existing database is accessed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatabaseNameInvalid">
            <summary>Will be raised when an invalid database name is used.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoUseSystemDatabase">
            <summary>Will be raised when an operation is requested in a database other than the system database.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoInvalidKeyGenerator">
            <summary>Will be raised when an invalid key generator description is used.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoInvalidEdgeAttribute">
            <summary>will be raised when the from or to values of an edge are undefined or contain an invalid value.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIndexCreationFailed">
            <summary>Will be raised when an attempt to create an index has failed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoWriteThrottleTimeout">
            <summary>
                Will be raised when the server is write-throttled and a write operation has waited too long for the server to
                process queued operations.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCollectionTypeMismatch">
            <summary>Will be raised when a collection has a different type from what has been expected.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoCollectionNotLoaded">
            <summary>Will be raised when a collection is accessed that is not yet loaded.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDocumentRevBad">
            <summary>Will be raised when a document revision is corrupt or is missing where needed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIncompleteRead">
            <summary>Will be raised by the storage engine when a read cannot be completed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoDatafileFull">
            <summary>Will be raised when the datafile reaches its limit.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoEmptyDatadir">
            <summary>Will be raised when encountering an empty server database directory.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoTryAgain">
            <summary>Will be raised when an operation should be retried.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoBusy">
            <summary>Will be raised when storage engine is busy.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoMergeInProgress">
            <summary>Will be raised when storage engine has a datafile merge in progress and cannot complete the operation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorArangoIoError">
            <summary>Will be raised when storage engine encounters an I/O error.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationNoResponse">
            <summary>Will be raised when the replication applier does not receive any or an incomplete response from the master.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationInvalidResponse">
            <summary>Will be raised when the replication applier receives an invalid response from the master.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationMasterError">
            <summary>Will be raised when the replication applier receives a server error from the master.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationMasterIncompatible">
            <summary>Will be raised when the replication applier connects to a master that has an incompatible version.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationMasterChange">
            <summary>Will be raised when the replication applier connects to a different master than before.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationLoop">
            <summary>Will be raised when the replication applier is asked to connect to itself for replication.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationUnexpectedMarker">
            <summary>Will be raised when an unexpected marker is found in the replication log stream.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationInvalidApplierState">
            <summary>Will be raised when an invalid replication applier state file is found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationUnexpectedTransaction">
            <summary>Will be raised when an unexpected transaction id is found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationInvalidApplierConfiguration">
            <summary>Will be raised when the configuration for the replication applier is invalid.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationRunning">
            <summary>Will be raised when there is an attempt to perform an operation while the replication applier is running.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationApplierStopped">
            <summary>Special error code used to indicate the replication applier was stopped by a user.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationNoStartTick">
            <summary>Will be raised when the replication applier is started without a known start tick value.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationStartTickNotPresent">
            <summary>Will be raised when the replication applier fetches data using a start tick</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationWrongChecksum">
            <summary>Will be raised when a new born follower submits a wrong checksum</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorReplicationShardNonempty">
            <summary>Will be raised when a shard is not empty and the follower tries a shortcut</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCreateCollectionPreconditionFailed">
            <summary>Will be raised when updating the plan on collection creatio failed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterServerUnknown">
            <summary>Will be raised on some occasions when one server gets a request from another</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterTooManyShards">
            <summary>Will be raised when the number of shards for a collection is higher than allowed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCollectionIdExists">
            <summary>
                Will be raised when a Coordinator in a cluster tries to create a collection and the collection ID already
                exists.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotCreateCollectionInPlan">
            <summary>
                Will be raised when a Coordinator in a cluster cannot create an entry for a new collection in the Plan
                hierarchy in the Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotCreateCollection">
            <summary>
                Will be raised when a Coordinator in a cluster notices that some DB-Servers report problems when creating
                shards for a new collection.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterTimeout">
            <summary>Will be raised when a Coordinator in a cluster runs into a timeout for some cluster wide operation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotRemoveCollectionInPlan">
            <summary>
                Will be raised when a Coordinator in a cluster cannot remove an entry for a collection in the Plan hierarchy
                in the Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotRemoveCollectionInCurrent">
            <summary>
                Will be raised when a Coordinator in a cluster cannot remove an entry for a collection in the Current
                hierarchy in the Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotCreateDatabaseInPlan">
            <summary>
                Will be raised when a Coordinator in a cluster cannot create an entry for a new database in the Plan hierarchy
                in the Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotCreateDatabase">
            <summary>
                Will be raised when a Coordinator in a cluster notices that some DB-Servers report problems when creating
                databases for a new cluster wide database.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotRemoveDatabaseInPlan">
            <summary>
                Will be raised when a Coordinator in a cluster cannot remove an entry for a database in the Plan hierarchy in
                the Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotRemoveDatabaseInCurrent">
            <summary>
                Will be raised when a Coordinator in a cluster cannot remove an entry for a database in the Current hierarchy
                in the Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterShardGone">
            <summary>
                Will be raised when a Coordinator in a cluster cannot determine the shard that is responsible for a given
                document.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterConnectionLost">
            <summary>
                Will be raised when a Coordinator in a cluster loses an HTTP connection to a DB-Server in the cluster whilst
                transferring data.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterMustNotSpecifyKey">
            <summary>
                Will be raised when a Coordinator in a cluster finds that the key attribute was specified in a sharded
                collection the uses not only key as sharding attribute.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterGotContradictingAnswers">
            <summary>Will be raised if a Coordinator in a cluster gets conflicting results from different shards</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterNotAllShardingAttributesGiven">
            <summary>Will be raised if a Coordinator tries to find out which shard is responsible for a partial document</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterMustNotChangeShardingAttributes">
            <summary>Will be raised if there is an attempt to update the value of a shard attribute.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterUnsupported">
            <summary>
                Will be raised when there is an attempt to carry out an operation that is not supported in the context of a
                sharded collection.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterOnlyOnCoordinator">
            <summary>Will be raised if there is an attempt to run a Coordinator-only operation on a different type of node.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterReadingPlanAgency">
            <summary>Will be raised if a Coordinator or DB-Server cannot read the Plan in the Agency.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotTruncateCollection">
            <summary>Will be raised if a Coordinator cannot truncate all shards of a cluster collection.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterAqlCommunication">
            <summary>Will be raised if the internal communication of the cluster for AQL produces an error.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterOnlyOnDbserver">
            <summary>Will be raised if there is an attempt to run a DB-Server-only operation on a different type of node.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterBackendUnavailable">
            <summary>Will be raised if a required DB-Server can’t be reached.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterAqlCollectionOutOfSync">
            <summary>
                Will be raised if a collection needed during query execution is out of sync. This currently can only happen
                when using SatelliteCollections
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotCreateIndexInPlan">
            <summary>
                Will be raised when a Coordinator in a cluster cannot create an entry for a new index in the Plan hierarchy in
                the Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotDropIndexInPlan">
            <summary>Will be raised when a Coordinator in a cluster cannot remove an index from the Plan hierarchy in the Agency.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterChainOfDistributeshardslike">
            <summary>
                Will be raised if one tries to create a collection with a distributeShardsLike attribute which points to
                another collection that also has one.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterMustNotDropCollOtherDistributeshardslike">
            <summary>
                Will be raised if one tries to drop a collection to which another collection points with its
                distributeShardsLike attribute.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterUnknownDistributeshardslike">
            <summary>
                Will be raised if one tries to create a collection which points to an unknown collection in its
                distributeShardsLike attribute.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterInsufficientDbservers">
            <summary>
                Will be raised if one tries to create a collection with a replicationFactor greater than the available number
                of DB-Servers.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotDropFollower">
            <summary>Will be raised if a follower that ought to be dropped could not be dropped in the Agency (under Current).</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterShardLeaderRefusesReplication">
            <summary>Will be raised if a replication operation is refused by a shard leader.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterShardFollowerRefusesOperation">
            <summary>Will be raised if a non-replication operation is refused by a shard follower.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterShardLeaderResigned">
            <summary>because it has resigned in the meantime</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterAgencyCommunicationFailed">
            <summary>Will be raised if after various retries an Agency operation could not be performed successfully.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterLeadershipChallengeOngoing">
            <summary>Will be raised when servers are currently competing for leadership</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterNotLeader">
            <summary>Will be raised when an operation is sent to a non-leading server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotCreateViewInPlan">
            <summary>
                Will be raised when a Coordinator in a cluster cannot create an entry for a new View in the Plan hierarchy in
                the Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterViewIdExists">
            <summary>Will be raised when a Coordinator in a cluster tries to create a View and the View ID already exists.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotDropCollection">
            <summary>
                Will be raised when a Coordinator in a cluster cannot drop a collection entry in the Plan hierarchy in the
                Agency.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryKilled">
            <summary>Will be raised when a running query is killed by an explicit admin command.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryParse">
            <summary>Will be raised when query is parsed and is found to be syntactically invalid.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryEmpty">
            <summary>Will be raised when an empty query is specified.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryScript">
            <summary>Will be raised when a runtime error is caused by the query.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryNumberOutOfRange">
            <summary>Will be raised when a number is outside the expected range.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryInvalidGeoValue">
            <summary>Will be raised when a geo index coordinate is invalid or out of range.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryVariableNameInvalid">
            <summary>Will be raised when an invalid variable name is used.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryVariableRedeclared">
            <summary>Will be raised when a variable gets re-assigned in a query.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryVariableNameUnknown">
            <summary>Will be raised when an unknown variable is used or the variable is undefined the context it is used.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryCollectionLockFailed">
            <summary>Will be raised when a read lock on the collection cannot be acquired.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryTooManyCollections">
            <summary>Will be raised when the number of collections or shards in a query is beyond the allowed value.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryDocumentAttributeRedeclared">
            <summary>Will be raised when a document attribute is re-assigned.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFunctionNameUnknown">
            <summary>Will be raised when an undefined function is called.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFunctionArgumentNumberMismatch">
            <summary>expected number of arguments: minimum: %d</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFunctionArgumentTypeMismatch">
            <summary>Will be raised when the type of an argument used in a function call does not match the expected argument type.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryInvalidRegex">
            <summary>Will be raised when an invalid regex argument value is used in a call to a function that expects a regex.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryBindParametersInvalid">
            <summary>Will be raised when the structure of bind parameters passed has an unexpected format.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryBindParameterMissing">
            <summary>
                Will be raised when a bind parameter was declared in the query but the query is being executed with no value
                for that parameter.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryBindParameterUndeclared">
            <summary>Will be raised when a value gets specified for an undeclared bind parameter.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryBindParameterType">
            <summary>Will be raised when a bind parameter has an invalid value or type.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryInvalidLogicalValue">
            <summary>Will be raised when a non-boolean value is used in a logical operation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryInvalidArithmeticValue">
            <summary>Will be raised when a non-numeric value is used in an arithmetic operation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryDivisionByZero">
            <summary>Will be raised when there is an attempt to divide by zero.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryArrayExpected">
            <summary>Will be raised when a non-array operand is used for an operation that expects an array argument operand.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFailCalled">
            <summary>Will be raised when the function FAIL() is called from inside a query.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryGeoIndexMissing">
            <summary>Will be raised when a geo restriction was specified but no suitable geo index is found to resolve it.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFulltextIndexMissing">
            <summary>Will be raised when a fulltext query is performed on a collection without a suitable fulltext index.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryInvalidDateValue">
            <summary>Will be raised when a value cannot be converted to a date.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryMultiModify">
            <summary>Will be raised when an AQL query contains more than one data-modifying operation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryInvalidAggregateExpression">
            <summary>Will be raised when an AQL query contains an invalid aggregate expression.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryCompileTimeOptions">
            <summary>
                Will be raised when an AQL data-modification query contains options that cannot be figured out at query
                compile time.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryExceptionOptions">
            <summary>Will be raised when an AQL data-modification query contains an invalid options specification.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryForcedIndexHintUnusable">
            <summary>Will be raised when forceIndexHint is specified</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryDisallowedDynamicCall">
            <summary>Will be raised when a dynamic function call is made to a function that cannot be called dynamically.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryAccessAfterModification">
            <summary>Will be raised when collection data are accessed after a data-modification operation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFunctionInvalidName">
            <summary>Will be raised when a user function with an invalid name is registered.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFunctionInvalidCode">
            <summary>Will be raised when a user function is registered with invalid code.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFunctionNotFound">
            <summary>Will be raised when a user function is accessed but not found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryFunctionRuntimeError">
            <summary>Will be raised when a user function throws a runtime exception.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryBadJsonPlan">
            <summary>Will be raised when an HTTP API for a query got an invalid JSON object.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryNotFound">
            <summary>Will be raised when an Id of a query is not found by the HTTP API.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryUserAssert">
            <summary>Will be raised if and user provided expression fails to evaluate to true</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueryUserWarn">
            <summary>Will be raised if and user provided expression fails to evaluate to true</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCursorNotFound">
            <summary>Will be raised when a cursor is requested via its id but a cursor with that id cannot be found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCursorBusy">
            <summary>Will be raised when a cursor is requested via its id but a concurrent request is still using the cursor.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorValidationFailed">
            <summary>Will be raised when a document does not pass schema validation.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorValidationBadParameter">
            <summary>Will be raised when the schema description is invalid.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTransactionInternal">
            <summary>
                Will be raised when a wrong usage of transactions is detected. this is an internal error and indicates a bug
                in ArangoDB.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTransactionNested">
            <summary>Will be raised when transactions are nested.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTransactionUnregisteredCollection">
            <summary>
                Will be raised when a collection is used in the middle of a transaction but was not registered at transaction
                start.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTransactionDisallowedOperation">
            <summary>Will be raised when a disallowed operation is carried out in a transaction.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTransactionAborted">
            <summary>Will be raised when a transaction was aborted.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTransactionNotFound">
            <summary>Will be raised when a transaction was not found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorUserInvalidName">
            <summary>Will be raised when an invalid user name is used.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorUserDuplicate">
            <summary>Will be raised when a user name already exists.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorUserNotFound">
            <summary>Will be raised when a user name is updated that does not exist.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorUserExternal">
            <summary>Will be raised when the user is authenticated by an external server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceDownloadFailed">
            <summary>Will be raised when a service download from the central repository failed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceUploadFailed">
            <summary>Will be raised when a service upload from the client to the ArangoDB server failed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapCannotInit">
            <summary>can not init a LDAP connection</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapCannotSetOption">
            <summary>can not set a LDAP option</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapCannotBind">
            <summary>can not bind to a LDAP server</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapCannotUnbind">
            <summary>can not unbind from a LDAP server</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapCannotSearch">
            <summary>can not search the LDAP server</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapCannotStartTls">
            <summary>can not star a TLS LDAP session</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapFoundNoObjects">
            <summary>LDAP didn’t found any objects with the specified search query</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapNotOneUserFound">
            <summary>LDAP found zero ore more than one user</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapUserNotIdentified">
            <summary>but its not the desired one</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapOperationsError">
            <summary>LDAP returned an operations error</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLdapInvalidMode">
            <summary>cant distinguish a valid mode for provided LDAP configuration</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTaskInvalidId">
            <summary>Will be raised when a task is created with an invalid id.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTaskDuplicateId">
            <summary>Will be raised when a task id is created with a duplicate id.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorTaskNotFound">
            <summary>Will be raised when a task with the specified id could not be found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidGraph">
            <summary>Will be raised when an invalid name is passed to the server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCouldNotCreateGraph">
            <summary>Will be raised when an invalid name</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidVertex">
            <summary>Will be raised when an invalid vertex id is passed to the server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCouldNotCreateVertex">
            <summary>Will be raised when the vertex could not be created.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCouldNotChangeVertex">
            <summary>Will be raised when the vertex could not be changed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidEdge">
            <summary>Will be raised when an invalid edge id is passed to the server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCouldNotCreateEdge">
            <summary>Will be raised when the edge could not be created.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCouldNotChangeEdge">
            <summary>Will be raised when the edge could not be changed.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphTooManyIterations">
            <summary>Will be raised when too many iterations are done in a graph traversal.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidFilterResult">
            <summary>Will be raised when an invalid filter result is returned in a graph traversal.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCollectionMultiUse">
            <summary>an edge collection may only be used once in one edge definition of a graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCollectionUseInMultiGraphs">
            <summary>is already used by another graph in a different edge definition.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCreateMissingName">
            <summary>a graph name is required to create or drop a graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCreateMalformedEdgeDefinition">
            <summary>the edge definition is malformed. It has to be an array of objects.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphNotFound">
            <summary>a graph with this name could not be found.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphDuplicate">
            <summary>a graph with this name already exists.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphVertexColDoesNotExist">
            <summary>the specified vertex collection does not exist or is not part of the graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphWrongCollectionTypeVertex">
            <summary>the collection is not a vertex collection.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphNotInOrphanCollection">
            <summary>Vertex collection not in list of orphan collections of the graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCollectionUsedInEdgeDef">
            <summary>The collection is already used in an edge definition of the graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphEdgeCollectionNotUsed">
            <summary>The edge collection is not used in any edge definition of the graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphNoGraphCollection">
            <summary>collection graphs does not exist.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidExampleArrayObjectString">
            <summary>Array or Object</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidExampleArrayObject">
            <summary>Invalid example type. Has to be Array or Object.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidNumberOfArguments">
            <summary>Invalid number of arguments. Expected:</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidParameter">
            <summary>Invalid parameter type.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInvalidId">
            <summary>Invalid id</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCollectionUsedInOrphans">
            <summary>The collection is already used in the orphans of the graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphEdgeColDoesNotExist">
            <summary>the specified edge collection does not exist or is not part of the graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphEmpty">
            <summary>The requested graph has no edge collections.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInternalDataCorrupt">
            <summary>The graphs collection contains invalid data.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphInternalEdgeCollectionAlreadySet">
            <summary>Tried to add an edge collection which is already defined.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCreateMalformedOrphanList">
            <summary>the orphan list argument is malformed. It has to be an array of strings.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphEdgeDefinitionIsDocument">
            <summary>the collection used as a relation is existing</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphCollectionIsInitial">
            <summary>the collection is used as the initial collection of this graph and is not allowed to be removed manually.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorGraphNoInitialCollection">
            <summary>
                during the graph creation process no collection could be selected as the needed initial collection. Happens if
                a distributeShardsLike or replicationFactor mismatch was found.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSessionUnknown">
            <summary>Will be raised when an invalid/unknown session id is passed to the server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSessionExpired">
            <summary>Will be raised when a session is expired.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSimpleClientUnknownError">
            <summary>This error should not happen.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSimpleClientCouldNotConnect">
            <summary>Will be raised when the client could not connect to the server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSimpleClientCouldNotWrite">
            <summary>Will be raised when the client could not write data.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSimpleClientCouldNotRead">
            <summary>Will be raised when the client could not read data.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorWasErlaube">
            <summary>Will be raised if was erlaube?!</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorInternalAql">
            <summary>Internal error during AQL execution</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorWroteTooFewOutputRegisters">
            <summary>An AQL block wrote too few output registers</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorWroteTooManyOutputRegisters">
            <summary>An AQL block wrote too many output registers</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorWroteOutputRegisterTwice">
            <summary>An AQL block wrote an output register twice</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorWroteInWrongRegister">
            <summary>An AQL block wrote in a register that is not its output</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorInputRegistersNotCopied">
            <summary>An AQL block did not copy its input registers</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorMalformedManifestFile">
            <summary>The service manifest file is not well-formed JSON.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorInvalidServiceManifest">
            <summary>The service manifest contains invalid values.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceFilesMissing">
            <summary>The service folder or bundle does not exist on this server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceFilesOutdated">
            <summary>The local service bundle does not match the checksum in the database.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorInvalidFoxxOptions">
            <summary>The service options contain invalid values.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorInvalidMountpoint">
            <summary>The service mountpath contains invalid characters.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceNotFound">
            <summary>No service found at the given mountpath.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceNeedsConfiguration">
            <summary>The service is missing configuration or dependencies.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceMountpointConflict">
            <summary>A service already exists at the given mountpath.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceManifestNotFound">
            <summary>The service directory does not contain a manifest file.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceOptionsMalformed">
            <summary>The service options are not well-formed JSON.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceSourceNotFound">
            <summary>The source path does not match a file or directory.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceSourceError">
            <summary>The source path could not be resolved.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceUnknownScript">
            <summary>The service does not have a script with this name.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorServiceApiDisabled">
            <summary>The API for managing Foxx services has been disabled on this server.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorModuleNotFound">
            <summary>The module path could not be resolved.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorModuleSyntaxError">
            <summary>The module could not be parsed because of a syntax error.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorModuleFailure">
            <summary>Failed to invoke the module in its context.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNoSmartCollection">
            <summary>The requested collection needs to be smart</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNoSmartGraphAttribute">
            <summary>The given document does not have the SmartGraph attribute set.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorCannotDropSmartCollection">
            <summary>This smart collection cannot be dropped</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorKeyMustBePrefixedWithSmartGraphAttribute">
            <summary>In a smart vertex collection key must be prefixed with the value of the SmartGraph attribute.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorIllegalSmartGraphAttribute">
            <summary>
                The given smartGraph attribute is illegal and cannot be used for sharding. All system attributes are
                forbidden.
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSmartGraphAttributeMismatch">
            <summary>The SmartGraph attribute of the given collection does not match the SmartGraph attribute of the graph.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorInvalidSmartJoinAttribute">
            <summary>Will be raised when the smartJoinAttribute declaration is invalid.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorKeyMustBePrefixedWithSmartJoinAttribute">
            <summary>when using smartJoinAttribute for a collection</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNoSmartJoinAttribute">
            <summary>The given document does not have the required SmartJoin attribute set or it has an invalid value.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterMustNotChangeSmartJoinAttribute">
            <summary>Will be raised if there is an attempt to update the value of the smartJoinAttribute.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorInvalidDisjointSmartEdge">
            <summary>Will be raised if there is an attempt to create an edge between separated graph components.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsFailed">
            <summary>General error during cluster repairs</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsNotEnoughHealthy">
            <summary>Will be raised when</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsReplicationFactorViolated">
            <summary>Will be raised on various inconsistencies regarding the replication factor</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsNoDbservers">
            <summary>Will be raised if a collection that is fixed has some shard without DB-Servers</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsMismatchingLeaders">
            <summary>
                Will be raised if a shard in collection and its prototype in the corresponding distributeShardsLike collection
                have mismatching leaders (when they should already have been fixed)
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsMismatchingFollowers">
            <summary>
                Will be raised if a shard in collection and its prototype in the corresponding distributeShardsLike collection
                don’t have the same followers (when they should already have been adjusted)
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsInconsistentAttributes">
            <summary>Will be raised if a collection that is fixed does (not) have distributeShardsLike when it is expected</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsMismatchingShards">
            <summary>
                Will be raised if in a collection and its distributeShardsLike prototype collection some shard and its
                prototype have an unequal number of DB-Servers
            </summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsJobFailed">
            <summary>Will be raised if a move shard job in the Agency failed during cluster repairs</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsJobDisappeared">
            <summary>Will be raised if a move shard job in the Agency cannot be found anymore before it finished</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterRepairsOperationFailed">
            <summary>Will be raised if an agency transaction failed during either sending or executing it.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyInformMustBeObject">
            <summary>The inform message in the Agency must be an object.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyInformMustContainTerm">
            <summary>The inform message in the Agency must contain a uint parameter ‘term’.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyInformMustContainId">
            <summary>The inform message in the Agency must contain a string parameter ‘id’.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyInformMustContainActive">
            <summary>The inform message in the Agency must contain an array ‘active’.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyInformMustContainPool">
            <summary>The inform message in the Agency must contain an object ‘pool’.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyInformMustContainMinPing">
            <summary>The inform message in the Agency must contain an object ‘min ping’.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyInformMustContainMaxPing">
            <summary>The inform message in the Agency must contain an object ‘max ping’.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyInformMustContainTimeoutMult">
            <summary>The inform message in the Agency must contain an object ‘timeoutMult’.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorAgencyCannotRebuildDbs">
            <summary>Will be raised if the readDB or the spearHead cannot be rebuilt from the replicated log.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorSupervisionGeneralFailure">
            <summary>General supervision failure.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorQueueFull">
            <summary>Will be returned if a queue with this name is full.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorActionOperationUnabortable">
            <summary>This maintenance action cannot be stopped once it is started</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorActionUnfinished">
            <summary>This maintenance action is still processing</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNoSuchAction">
            <summary>No such maintenance action exists</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHotBackupInternal">
            <summary>Failed to create hot backup set</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHotRestoreInternal">
            <summary>Failed to restore to hot backup set</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorBackupTopology">
            <summary>The hot backup set cannot be restored on non matching cluster topology</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNoSpaceLeftOnDevice">
            <summary>No space left on device</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorFailedToUploadBackup">
            <summary>Failed to upload hot backup set to remote target</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorFailedToDownloadBackup">
            <summary>Failed to download hot backup set from remote source</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorNoSuchHotBackup">
            <summary>Cannot find a hot backup set with this Id</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorRemoteRepositoryConfigBad">
            <summary>The configuration given for upload or download operation to/from remote hot backup repositories is wrong.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLocalLockFailed">
            <summary>Some of the DB-Servers cannot be reached for transaction locks.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorLocalLockRetry">
            <summary>Some of the DB-Servers cannot be reached for transaction locks.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHotBackupConflict">
            <summary>Conflict of multiple hot backup processes.</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorHotBackupDbserversAwol">
            <summary>One or more DB-Servers could not be reached for hot backup inquiry</summary>
        </member>
        <member name="F:Core.Arango.ArangoErrorCode.ErrorClusterCouldNotModifyAnalyzersInPlan">
            <summary>Plan could not be modified while creating or deleting Analyzers revision</summary>
        </member>
        <member name="T:Core.Arango.ArangoException">
            <summary>
                Generic Arango exception
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoException.#ctor(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoException.#ctor(System.String,System.String,System.Net.HttpStatusCode,Core.Arango.ArangoErrorCode)">
            <summary>
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoException.#ctor(System.String,System.Collections.Generic.IEnumerable{Core.Arango.Protocol.ArangoError})">
            <summary>
            </summary>
        </member>
        <member name="P:Core.Arango.ArangoException.ErrorMessage">
            <summary>
                Error message
            </summary>
        </member>
        <member name="P:Core.Arango.ArangoException.Code">
            <summary>
                HTTP status code
            </summary>
        </member>
        <member name="P:Core.Arango.ArangoException.ErrorNumber">
            <summary>
                Arango error code
            </summary>
        </member>
        <member name="P:Core.Arango.ArangoException.Errors">
            <summary>
                Error descriptions
            </summary>
        </member>
        <member name="T:Core.Arango.ArangoHandle">
            <summary>
                Arango database / transaction handle
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoHandle.#ctor(System.String)">
            <summary>
                Construct handle from database name
            </summary>
            <param name="name">database name</param>
        </member>
        <member name="M:Core.Arango.ArangoHandle.#ctor(System.Guid)">
            <summary>
                Construct handle from database guid (requires realm)
            </summary>
            <param name="name">database name</param>
        </member>
        <member name="M:Core.Arango.ArangoHandle.#ctor(Core.Arango.ArangoHandle,System.String)">
            <summary>
                Constructs wrapping handle with transaction
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoHandle.op_Implicit(System.String)~Core.Arango.ArangoHandle">
            <summary>
                Convert from string
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:Core.Arango.ArangoHandle.op_Implicit(System.Guid)~Core.Arango.ArangoHandle">
            <summary>
                Convert from Guid
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoHandle.op_Implicit(Core.Arango.ArangoHandle)~System.String">
            <summary>
                Convert to string
            </summary>
        </member>
        <member name="M:Core.Arango.ArangoHandle.ToString">
            <summary>
                ToString
            </summary>
        </member>
        <member name="T:Core.Arango.ArangoIgnoreAttribute">
            <summary>
                Json.NET Only - Mark properties to be ignored from being written to ArangoDB
            </summary>
        </member>
        <member name="T:Core.Arango.ArangoList`1">
            <summary>
                Generic List with fullcount extension
            </summary>
        </member>
        <member name="P:Core.Arango.ArangoList`1.FullCount">
            <summary>
                Actual result count of query ignoring LIMIT clause
            </summary>
        </member>
        <member name="T:Core.Arango.IArangoConfiguration">
            <summary>
                Driver configuration
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.ConnectionString">
            <summary>
                Arango connection string
            </summary>
            <example>
                Server=http://localhost:8529;Realm=prod;User=root;Password=;
            </example>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.Realm">
            <summary>
                Prefixes database names
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.Server">
            <summary>
                Arango server url
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.User">
            <summary>
                Arango user
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.Password">
            <summary>
                Arango user password
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.BatchSize">
            <summary>
                Default batch size
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.Serializer">
            <summary>
                Serializer override
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.Transport">
            <summary>
                Transport override
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.QueryProfile">
            <summary>
                Callback for each query execute with stats
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.HttpClient">
            <summary>
                Override HttpClient
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.AllowDirtyRead">
            <summary>
                Enables read queries from followers
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.Endpoints">
            <summary>
                Multiple servers
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.ResolveProperty">
            <summary>
             LINQ: resolve property name
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.ResolveCollection">
            <summary>
             LINQ: resolve type to collection name
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoConfiguration.ResolveGroupBy">
            <summary>
             LINQ: resolve group names
            </summary>
        </member>
        <member name="T:Core.Arango.IArangoContext">
            <summary>
                Arango connection to server or cluster
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Configuration">
            <summary>
                Configuration
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.User">
            <summary>
                User management module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Collection">
            <summary>
                Collection management module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Graph">
            <summary>
                Graph management and vertex/edge manipulation module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Transaction">
            <summary>
                Stream and JavaScript transaction module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Document">
            <summary>
                Document module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Query">
            <summary>
                Query (cursor) module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Database">
            <summary>
                Database management module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.View">
            <summary>
                View (ArangoSearch) management module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Index">
            <summary>
                Index management module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Analyzer">
            <summary>
                Analyzer (ArangoSearch) management module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Function">
            <summary>
                Custom functions management module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Foxx">
            <summary>
                Foxx services module
            </summary>
        </member>
        <member name="P:Core.Arango.IArangoContext.Backup">
            <summary>
                HotBackup module (enterprise only)
            </summary>
        </member>
        <member name="M:Core.Arango.IArangoContext.GetVersionAsync(System.Threading.CancellationToken)">
            <summary>
                Get Arango server version and license
            </summary>
        </member>
        <member name="M:Core.Arango.IArangoContext.GetEndpointsAsync(System.Threading.CancellationToken)">
            <summary>
                Get Arango cluster endpoints
            </summary>
        </member>
        <member name="T:Core.Arango.Linq.Aql">
            <summary>
            Built-on AQL functions
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Distance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Calculate the distance between two arbitrary coordinates in meters (as birds would fly). The value is computed
                using the haversine formula, which is based on a spherical Earth model. It’s fast to compute and is accurate to
                around 0.3%, which is sufficient for most use cases such as location-aware services.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoContains(System.Object,System.Object)">
            <summary>
                Checks whether the GeoJSON object geoJsonA fully contains geoJsonB (Every point in B is also in A). The object
                geoJsonA has to be of type Polygon or MultiPolygon, other types are not supported because containment is ill
                defined. This function can be optimized by a S2 based geospatial index.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoDistance(System.Object,System.Object)">
            <summary>
                Return the distance between two GeoJSON objects, measured from the centroid of each shape.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoDistance(System.Object,System.Object,System.String)">
            <summary>
                Return the distance between two GeoJSON objects, measured from the centroid of each shape.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoArea(System.Object)">
            <summary>
                Return the area for a polygon or multi-polygon on a sphere with the average Earth radius, or an ellipsoid.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoArea(System.Object,System.String)">
            <summary>
                Return the area for a polygon or multi-polygon on a sphere with the average Earth radius, or an ellipsoid.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoEquals(System.Object,System.Object)">
            <summary>
                Checks whether two GeoJSON objects are equal or not.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoIntersects(System.Object,System.Object)">
            <summary>
                Checks whether the GeoJSON object geoJsonA intersects with geoJsonB (i.e. at least one point in B is also A or
                vice-versa). This function can be optimized by a S2 based geospatial index.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoInRange(System.Object,System.Object,System.Double,System.Double)">
            <summary>
                Checks whether the distance between two GeoJSON objects lies within a given interval. The distance is measured from
                the centroid of each shape.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoInRange(System.Object,System.Object,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
                Checks whether the distance between two GeoJSON objects lies within a given interval. The distance is measured from
                the centroid of each shape.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoLineString(System.Object[])">
            <summary>
                Construct a GeoJSON LineString. Needs at least two longitude/latitude pairs.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoMultiLineString(System.Object[])">
            <summary>
                Construct a GeoJSON MultiLineString. Needs at least two elements consisting valid LineStrings coordinate arrays.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoMultiPoint(System.Object[])">
            <summary>
                Construct a GeoJSON LineString. Needs at least two longitude/latitude pairs.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoPoint(System.Double,System.Double)">
            <summary>
                Construct a valid GeoJSON Point.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoPolygon(System.Object[])">
            <summary>
                Construct a GeoJSON Polygon. Needs at least one array representing a loop. Each loop consists of an array with at
                least three longitude/latitude pairs. The first loop must be the outermost, while any subsequent loops will be
                interpreted as holes.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.GeoMultiPolygon(System.Object[])">
            <summary>
                Construct a GeoJSON MultiPolygon. Needs at least two Polygons inside.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.NotNull``1(System.Object[])">
            <summary>
                Return the first element that is not null, and null if all alternatives are null themselves. It is also known as
                COALESCE() in SQL.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.FirstList``1(System.Object[])">
            <summary>
                Return the first alternative that is an array, and null if none of the alternatives is an array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.FirstDocument``1(System.Object[])">
            <summary>
                Return the first alternative that is a document, and null if none of the alternatives is a document.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Collections``1">
            <summary>
                Return an array of collections.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.CurrentUser">
            <summary>
                Return the name of the current user.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.DecodeRev(System.String)">
            <summary>
                Decompose the specified revision string into its components.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Document``1(System.String,System.Object)">
            <summary>
                Return the document which is uniquely identified by its id.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Document``1(System.String)">
            <summary>
                Return the document which is uniquely identified by its id.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Document``1(System.String,System.Object[])">
            <summary>
                Return the document which is uniquely identified by its id.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Document``1(System.String[])">
            <summary>
                Return the document which is uniquely identified by its id.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Length(System.Object)">
            <summary>
                Determine the amount of documents in a collection. LENGTH() can also determine the number of elements in an array,
                the number of attribute keys of an object / document and the character length of a string.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Hash(System.Object)">
            <summary>
                Calculate a hash value for value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Apply``1(System.String,System.Object[])">
            <summary>
                Dynamically call the function funcName with the arguments specified. Arguments are given as array and are passed as
                separate parameters to the called function.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Call``1(System.String,System.Object[])">
            <summary>
                Dynamically call the function funcName with the arguments specified. Arguments are given as multiple parameters and
                passed as separate parameters to the called function.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Assert(System.Boolean,System.String)">
            <summary>
                if the expression evaluates to false ASSERT will throw an error.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Warn(System.Boolean,System.String)">
            <summary>
                If the expression evaluates to false WARN will issue a warning.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.InRange``1(``0,``0,``0,System.Boolean,System.Boolean)">
            <summary>
                Returns true if value is greater than (or equal to) low and less than (or equal to) high. The values can be of
                different types. They are compared as described in Type and value order and is thus identical to the comparison
                operators &lt;, &lt;=, &gt; and &gt;= in behavior.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.PregelResult``1(System.String,System.Boolean)">
            <summary>
                Allows to access results of a Pregel job that are only held in memory.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Abs(System.Double)">
            <summary>
                Return the absolute part of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Acos(System.Double)">
            <summary>
                Return the arccosine of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Asin(System.Double)">
            <summary>
                Return the arcsine of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Atan(System.Double)">
            <summary>
                Return the arctangent of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Atan2(System.Double,System.Double)">
            <summary>
                Return the arctangent of the quotient of y and x.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Average(System.Double[])">
            <summary>
                Return the average (arithmetic mean) of the values in array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Avg(System.Double[])">
            <summary>
                This is an alias for AVERAGE().
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Ceil(System.Double)">
            <summary>
                Return the integer closest but not less than value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Cos(System.Double)">
            <summary>
                Return the cosine of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Degrees(System.Double)">
            <summary>
                Return the angle converted from radians to degrees.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Exp(System.Double)">
            <summary>
                Return Euler’s constant raised to the power of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Exp2(System.Double)">
            <summary>
                Return 2 raised to the power of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Floor(System.Double)">
            <summary>
                Return the integer closest but not greater than value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Log(System.Double)">
            <summary>
                Return the natural logarithm of value
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Log2(System.Double)">
            <summary>
                Return the base 2 logarithm of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Log10(System.Double)">
            <summary>
                Return the base 10 logarithm of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Max``1(``0[])">
            <summary>
                Return the greatest element of anyArray. The array is not limited to numbers. Also see type and value order.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Median(System.Double[])">
            <summary>
                Return the median value of the values in array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Min``1(``0[])">
            <summary>
                Return the smallest element of anyArray. The array is not limited to numbers.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Percentile(System.Double[],System.Double,System.String)">
            <summary>
                Return the nth percentile of the values in numArray.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Pi">
            <summary>
                Return pi.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Round(System.Double,System.Double)">
            <summary>
                Return the base to the exponent exp.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Product(System.Double[])">
            <summary>
                Return the product of the values in array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Radians(System.Double[])">
            <summary>
                Return the angle converted from degrees to radians.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Rand">
            <summary>
                Return a pseudo-random number between 0 and 1.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Range(System.Double,System.Double,System.Double)">
            <summary>
                Return an array of numbers in the specified range, optionally with increments other than 1. The start and stop
                arguments are truncated to integers unless a step argument is provided.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Range(System.Int64,System.Int64)">
            <summary>
                Return an array of numbers in the specified range, optionally with increments other than 1. The start and stop
                arguments are truncated to integers unless a step argument is provided.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Round(System.Double)">
            <summary>
                Return the integer closest to value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Sin(System.Double)">
            <summary>
                Return the sine of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Sqrt(System.Double)">
            <summary>
                Return the square root of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.StdDevPopulation(System.Double[])">
            <summary>
                Return the population standard deviation of the values in array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.StdDevSample(System.Double[])">
            <summary>
                Return the sample standard deviation of the values in array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.StdDev(System.Double[])">
            <summary>
                This is an alias for STDDEV_POPULATION().
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Sum(System.Double[])">
            <summary>
                Return the sum of the values in array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Tan(System.Double)">
            <summary>
                Return the tangent of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.VariancePopulation(System.Double[])">
            <summary>
                Return the population variance of the values in array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.VarianceSample(System.Double[])">
            <summary>
                Return the sample variance of the values in array.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Variance(System.Double[])">
            <summary>
                This is an alias for VARIANCE_POPULATION().
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.ToBool(System.Object)">
            <summary>
                Take an input value of any type and convert it into the appropriate boolean value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.ToNumber(System.Object)">
            <summary>
                Take an input value of any type and convert it into a numeric value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.ToString(System.Object)">
            <summary>
                Take an input value of any type and convert it into a string value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.ToArray``1(``0)">
            <summary>
                Take an input value of any type and convert it into an array value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.ToList``1(``0)">
            <summary>
                This is an alias for TO_ARRAY().
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsNull(System.Object)">
            <summary>
                Check whether value is null.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsBool(System.Object)">
            <summary>
                Check whether value is a boolean value
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsNumber(System.Object)">
            <summary>
                Check whether value is a number
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsString(System.Object)">
            <summary>
                Check whether value is a string
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsArray(System.Object)">
            <summary>
                Check whether value is an array / list
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsList(System.Object)">
            <summary>
                This is an alias for IS_ARRAY()
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsObject(System.Object)">
            <summary>
                Check whether value is an object / document
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsDocument(System.Object)">
            <summary>
                This is an alias for IS_OBJECT()
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsDateString(System.Object)">
            <summary>
                Check whether value is a string that can be used in a date function. This includes partial dates such as “2015” or
                “2015-10” and strings containing properly formatted but invalid dates such as “2015-02-31”.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsKey(System.Object)">
            <summary>
                Check whether value is a string that can be used as a document key.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.IsIpV4(System.Object)">
            <summary>
                Check if an arbitrary string is suitable for interpretation as an IPv4 address.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Aql.Typename(System.Object)">
            <summary>
                Return the data type name of value.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Query.ArangoQueryProvider.#ctor(System.Type,Remotion.Linq.Parsing.Structure.IQueryParser,Remotion.Linq.IQueryExecutor,Core.Arango.Linq.Interface.IArangoLinq)">
            <summary>
                Initializes a new instance of <see cref="T:Core.Arango.Linq.Query.ArangoQueryProvider" /> using a custom <see cref="T:Remotion.Linq.Parsing.Structure.IQueryParser" />.
            </summary>
        </member>
        <member name="P:Core.Arango.Linq.Query.ArangoQueryProvider.QueryableType">
            <summary>
                Gets the type of queryable created by this provider. This is the generic type definition of an implementation of
                <see cref="T:System.Linq.IQueryable`1" />
                (usually a subclass of <see cref="T:Remotion.Linq.QueryableBase`1" />) with exactly one type argument.
            </summary>
        </member>
        <member name="M:Core.Arango.Linq.Query.ArangoQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
                Creates a new <see cref="T:System.Linq.IQueryable" /> (of type <see cref="P:Core.Arango.Linq.Query.ArangoQueryProvider.QueryableType" /> with <typeparamref name="T" /> as its
                generic argument) that
                represents the query defined by <paramref name="expression" /> and is able to enumerate its results.
            </summary>
            <typeparam name="T">The type of the data items returned by the query.</typeparam>
            <param name="expression">
                An expression representing the query for which a <see cref="T:System.Linq.IQueryable`1" /> should be
                created.
            </param>
            <returns>An <see cref="T:System.Linq.IQueryable`1" /> that represents the query defined by <paramref name="expression" />.</returns>
        </member>
        <member name="T:Core.Arango.Modules.IArangoAnalyzerModule">
            <summary>
                ArangoSearch analyzer
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoAnalyzerModule.CreateAsync(Core.Arango.ArangoHandle,Core.Arango.Protocol.ArangoAnalyzer,System.Threading.CancellationToken)">
            <summary>
                creates a new Analyzer based on the provided definition
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoAnalyzerModule.DeleteAsync(Core.Arango.ArangoHandle,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                removes an Analyzer configuration
            </summary>
            <param name="database"></param>
            <param name="analyzer">The name of the Analyzer to remove.</param>
            <param name="force">The Analyzer configuration should be removed even if it is in-use. The default value is false.</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Core.Arango.Modules.IArangoAnalyzerModule.ListAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                returns a listing of available Analyzer definitions
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoAnalyzerModule.GetDefinitionAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
             returns an Analyzer definition
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoBackupModule">
            <summary>
                HotBackup (enterprise only)
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoBackupModule.CreateAsync(Core.Arango.Protocol.ArangoBackupRequest,System.Threading.CancellationToken)">
            <summary>
                Creates a local backup.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoBackupModule.RestoreAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Restores from a local backup.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoBackupModule.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a specific local backup.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoBackupModule.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                List all local backups.
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoCollectionModule">
            <summary>
                Collection management
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.CreateAsync(Core.Arango.ArangoHandle,Core.Arango.Protocol.ArangoCollection,System.Threading.CancellationToken)">
            <summary>
                Creates a collection
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.CreateAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoCollectionType,System.Threading.CancellationToken)">
            <summary>
                Creates a collection
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.ListAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Returns all collections
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.RenameAsync(Core.Arango.ArangoHandle,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Renames a collection (not in cluster)
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.TruncateAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Truncates a collection
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.UpdateAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoCollectionUpdate,System.Threading.CancellationToken)">
            <summary>
                Changes a collection
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.DropAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Drops a collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.GetAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Returns a collection
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoCollectionModule.ExistAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Checks of collection exists (calls ListAsync internally)
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoDatabaseModule">
            <summary>
                Database management
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDatabaseModule.CreateAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Creates a new database
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDatabaseModule.DropAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Drop an existing database
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDatabaseModule.ExistAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Checks if database exists (calls ListAsync internally)
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDatabaseModule.ListAsync(System.Threading.CancellationToken)">
            <summary>
                Retrieves a list of all existing databases
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoDocumentModule">
            <summary>
                Document module
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.GetAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.Boolean,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Read a single document
            </summary>
            <param name="handle">database, transaction, batch handle</param>
            <param name="collection">collection</param>
            <param name="key">document key</param>
            <param name="throwOnError">when false does not throw an exception if document does not exist</param>
            <param name="ifMatch">
                The document is returned, if it has the same revision as the given Etag. Otherwise a HTTP 412 is
                returned.
            </param>
            <param name="ifNoneMatch">
                The document is returned, if it has a different revision than the given Etag. Otherwise an
                HTTP 304 is returned.
            </param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.GetManyAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{System.Object},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Read multiple documents
            </summary>
            <param name="handle">database, transaction, batch handle</param>
            <param name="collection">collection</param>
            <param name="keys">list of keys with optional revision</param>
            <param name="ignoreRevs">
                If a search document contains a value for the _rev field, then the document is only returned
                if it has the same revision value
            </param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.CreateManyAsync``2(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Core.Arango.Protocol.ArangoOverwriteMode},System.Threading.CancellationToken)">
            <summary>
                Creates multiple documents
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.CreateManyAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Core.Arango.Protocol.ArangoOverwriteMode},System.Threading.CancellationToken)">
            <summary>
                Creates multiple documents
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.CreateAsync``2(Core.Arango.ArangoHandle,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Core.Arango.Protocol.ArangoOverwriteMode},System.Threading.CancellationToken)">
            <summary>
                Create document
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.CreateAsync``1(Core.Arango.ArangoHandle,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Core.Arango.Protocol.ArangoOverwriteMode},System.Threading.CancellationToken)">
            <summary>
                Create document
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.DeleteManyAsync``2(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Removes multiple documents
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.DeleteAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)">
            <summary>
                Removes single document by key
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.ExportAsync``1(Core.Arango.ArangoHandle,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
               Export all documents in batches from a collection (Query.ExecuteStreamAsync)
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.ImportAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Bulk import
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.ReplaceManyAsync``2(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replaces multiple documents
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.ReplaceManyAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replaces multiple documents
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.ReplaceAsync``2(Core.Arango.ArangoHandle,System.String,``0,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replace single document
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.ReplaceAsync``1(Core.Arango.ArangoHandle,System.String,``0,System.Boolean,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replace single document
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.UpdateManyAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Updates multiple documents
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.UpdateManyAsync``2(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Updates multiple documents
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.UpdateAsync``1(Core.Arango.ArangoHandle,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Updates single document
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoDocumentModule.UpdateAsync``2(Core.Arango.ArangoHandle,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Updates single document
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoFoxxModule">
            <summary>
                Foxx service management and execution
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.ListServicesAsync(Core.Arango.ArangoHandle,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                List installed services
            </summary>
            <param name="database"></param>
            <param name="excludeSystem">Whether or not system services should be excluded from the result.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.InstallServiceAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoFoxxSource,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Install new service
            </summary>
            <param name="database">Database the service should be installed at.</param>
            <param name="mount">Mount path the service should be installed at.</param>
            <param name="service"></param>
            <param name="development">Set to true to enable development mode.</param>
            <param name="setup">Set to false to not run the service’s setup script.</param>
            <param name="legacy">Set to true to install the service in 2.8 legacy compatibility mode.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.ReplaceServiceAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoFoxxSource,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replace a service
            </summary>
            <param name="database">Database the service should be installed at.</param>
            <param name="mount">Mount path the service should be installed at.</param>
            <param name="service"></param>
            <param name="teardown">Set to true to run the old service’s teardown script.</param>
            <param name="setup">Set to false to not run the service’s setup script.</param>
            <param name="legacy">Set to true to install the service in 2.8 legacy compatibility mode.</param>
            <param name="force">Set to true to force service install even if no service is installed under given mount.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.UpgradeServiceAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoFoxxSource,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Upgrade a service
            </summary>
            <param name="database">Database the service should be installed at.</param>
            <param name="mount">Mount path the service should be installed at.</param>
            <param name="service"></param>
            <param name="teardown">Set to true to run the old service’s teardown script.</param>
            <param name="setup">Set to false to not run the service’s setup script.</param>
            <param name="legacy">Set to true to install the service in 2.8 legacy compatibility mode.</param>
            <param name="force">Set to true to force service install even if no service is installed under given mount.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.UninstallServiceAsync(Core.Arango.ArangoHandle,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Uninstall service
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.GetConfigurationAsync``1(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Get configuration options
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.UpdateConfigurationAsync(Core.Arango.ArangoHandle,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
                Update configuration options
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.ReplaceConfigurationAsync(Core.Arango.ArangoHandle,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
                Replace configuration options
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.GetDependenciesAsync``1(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Get dependency options
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.UpdateDependenciesAsync(Core.Arango.ArangoHandle,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
                Update dependency options
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.ReplaceDependenciesAsync(Core.Arango.ArangoHandle,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
                Replace dependency options
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.GetAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                HTTP GET request to Foxx service
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.PostAsync``1(Core.Arango.ArangoHandle,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                HTTP POST request to Foxx service
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.PutAsync``1(Core.Arango.ArangoHandle,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                HTTP PUT request to Foxx service
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.PatchAsync``1(Core.Arango.ArangoHandle,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                HTTP PATCH request to Foxx service
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.DeleteAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                HTTP DELETE request to Foxx service
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.EnableDevelopmentModeAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Enable development mode
            </summary>
            <param name="database">Database the target service.</param>
            <param name="mount">Mount path of the installed service.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.DisableDevelopmentModeAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Disable development mode
            </summary>
            <param name="database">Database the target service.</param>
            <param name="mount">Mount path of the installed service.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.DownloadServiceAsync``1(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database"></param>
            <param name="mount"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFoxxModule.RunServiceScriptAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="database"></param>
            <param name="mount"></param>
            <param name="name"></param>
            <param name="body"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Core.Arango.Modules.IArangoFunctionModule">
            <summary>
                AQL user functions
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFunctionModule.CreateAsync(Core.Arango.ArangoHandle,Core.Arango.Protocol.ArangoFunctionDefinition,System.Threading.CancellationToken)">
            <summary>
                create a new AQL user function
            </summary>
            <returns>true if newly created</returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFunctionModule.RemoveAsync(Core.Arango.ArangoHandle,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                remove an existing AQL user function
            </summary>
            <param name="database"></param>
            <param name="name">the name of the AQL user function</param>
            <param name="group">
                The function name provided in name is treated as a namespace prefix, and all functions in the
                specified namespace will be deleted
            </param>
            <param name="cancellationToken"></param>
            <returns>number of deleted functions</returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoFunctionModule.ListAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                gets all registered AQL user functions
            </summary>
            <param name="database"></param>
            <param name="ns">filter user functions from namespace</param>
            <param name="cancellationToken"></param>
            <returns>list of function definitions</returns>
        </member>
        <member name="T:Core.Arango.Modules.IArangoGraphEdgeModule">
            <summary>
                Graph edge manipulation
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.GetAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                Fetch an edge
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.CreateAsync``1(Core.Arango.ArangoHandle,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Creates an edge in an existing graph
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.UpdateAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Modify an existing edge
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.ReplaceAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replace the content of an existing edge
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.RemoveAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Removes an edge from graph
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.CreateAsync``2(Core.Arango.ArangoHandle,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Creates an edge in an existing graph
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.UpdateAsync``2(Core.Arango.ArangoHandle,System.String,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Modify an existing edge
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.ReplaceAsync``2(Core.Arango.ArangoHandle,System.String,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replace the content of an existing edge
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphEdgeModule.RemoveAsync``2(Core.Arango.ArangoHandle,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Removes an edge from graph
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoGraphModule">
            <summary>
                Graph management
            </summary>
        </member>
        <member name="P:Core.Arango.Modules.IArangoGraphModule.Vertex">
            <summary>
                Vertex manipulation module.
            </summary>
        </member>
        <member name="P:Core.Arango.Modules.IArangoGraphModule.Edge">
            <summary>
                Edge manipulation module.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.CreateAsync(Core.Arango.ArangoHandle,Core.Arango.Protocol.ArangoGraph,System.Threading.CancellationToken)">
            <summary>
                Create a new graph in the graph module.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.DropAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Delete an existing graph.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.ListAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Lists all graphs known to the graph module.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.GetAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Get a graph from the graph module.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.AddVertexCollectionAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoVertexCollection,System.Threading.CancellationToken)">
            <summary>
                Add an additional vertex collection to the graph.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.AddEdgeDefinitionAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoEdgeDefinition,System.Threading.CancellationToken)">
            <summary>
                Add a new edge definition to the graph
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.RemoveVertexCollectionAsync(Core.Arango.ArangoHandle,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Remove a vertex collection form the graph.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.ReplaceEdgeDefinitionAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoEdgeDefinition,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replace an existing edge definition
            </summary>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphModule.RemoveEdgeDefinitionAsync(Core.Arango.ArangoHandle,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Remove an edge definition form the graph
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoGraphVertexModule">
            <summary>
                Graph vertex manipulation
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.GetAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
                fetches an existing vertex
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.CreateAsync``1(Core.Arango.ArangoHandle,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Create a new vertex
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.CreateAsync``2(Core.Arango.ArangoHandle,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Create a new vertex
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.UpdateAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Update an existing vertex
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.UpdateAsync``2(Core.Arango.ArangoHandle,System.String,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Update an existing vertex
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.ReplaceAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replaces an existing vertex
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.ReplaceAsync``2(Core.Arango.ArangoHandle,System.String,System.String,System.String,``0,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Replaces an existing vertex
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.RemoveAsync(Core.Arango.ArangoHandle,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Removes a vertex from a graph
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoGraphVertexModule.RemoveAsync``1(Core.Arango.ArangoHandle,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Removes a vertex from a graph
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoIndexModule">
            <summary>
                Index management
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoIndexModule.CreateAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoIndex,System.Threading.CancellationToken)">
            <summary>
                creates an index
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoIndexModule.DropAllAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Drops all indices of a database
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoIndexModule.DropAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Drops an index
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoIndexModule.ListAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Returns all indexes of a collection
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoQueryModule">
            <summary>
                Query documents
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoQueryModule.FindAsync``1(Core.Arango.ArangoHandle,System.String,System.FormattableString,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Finds documents
            </summary>
            <typeparam name="T">RETURN element type</typeparam>
            <param name="database"></param>
            <param name="collection"></param>
            <param name="filter">FILTER expression with "x."</param>
            <param name="projection">RETURN expression</param>
            <param name="limit"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Core.Arango.Modules.IArangoQueryModule.SingleOrDefaultAsync``1(Core.Arango.ArangoHandle,System.String,System.FormattableString,System.String,System.Threading.CancellationToken)">
            <summary>
                Finds single document (and throws exception of more than one are found)
            </summary>
            <typeparam name="T">RETURN element type</typeparam>
            <param name="database"></param>
            <param name="collection"></param>
            <param name="filter">FILTER expression with "x."</param>
            <param name="projection">RETURN expression</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Core.Arango.Modules.IArangoQueryModule.ExecuteAsync(System.Type,System.Boolean,Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Execute query (Linq provider)
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoQueryModule.ExecuteAsync``1(Core.Arango.ArangoHandle,System.FormattableString,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Execute query with string interpolated bind parameters
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoQueryModule.ExecuteAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
                Execute query with bind parameters in dictionary
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoQueryModule.ExecuteStreamAsync``1(Core.Arango.ArangoHandle,System.FormattableString,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
                Execute query with string interpolated bind parameters (IAsyncEnumerable)
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoQueryModule.ExecuteStreamAsync``1(Core.Arango.ArangoHandle,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
                Execute query with bind parameters in dictionary (IAsyncEnumerable)
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoTransactionModule">
            <summary>
                Stream and JavaScript transactions
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoTransactionModule.BeginAsync(Core.Arango.ArangoHandle,Core.Arango.Protocol.ArangoTransaction,System.Threading.CancellationToken)">
            <summary>
                Begin a server-side transaction
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoTransactionModule.AbortAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Abort a server-side transaction
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoTransactionModule.CommitAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Commit a server-side transaction
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoTransactionModule.ExecuteAsync``1(Core.Arango.ArangoHandle,Core.Arango.Protocol.ArangoTransaction,System.Threading.CancellationToken)">
            <summary>
                execute a server-side (script) transaction
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoUserModule">
            <summary>
                User management
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoUserModule.CreateAsync(Core.Arango.Protocol.ArangoUser,System.Threading.CancellationToken)">
            <summary>
                Create a new user.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoUserModule.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a user permanently.
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoUserModule.DeleteDatabaseAccessAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Clear the database access level, revert back to the default access level
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoUserModule.ListAsync(System.Threading.CancellationToken)">
            <summary>
                Lists all users
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoUserModule.PatchAsync(Core.Arango.Protocol.ArangoUser,System.Threading.CancellationToken)">
            <summary>
                Modify attributes of an existing user
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoUserModule.SetDatabaseAccessAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoAccess,System.Threading.CancellationToken)">
            <summary>
                Set the database access level.
            </summary>
        </member>
        <member name="T:Core.Arango.Modules.IArangoViewModule">
            <summary>
                Arango View (ArangoSearch) management
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoViewModule.CreateAsync(Core.Arango.ArangoHandle,Core.Arango.Protocol.ArangoView,System.Threading.CancellationToken)">
            <summary>
                creates an ArangoSearch View
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoViewModule.DropAllAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Drops all Views in database
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoViewModule.DropAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Drops a View
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoViewModule.ListAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Returns all Views
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.IArangoViewModule.GetPropertiesAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
             Get properties of view
            </summary>
            <param name="database"></param>
            <param name="view"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Core.Arango.Modules.Internal.ArangoIndexModule.DropAllAsync(Core.Arango.ArangoHandle,System.Threading.CancellationToken)">
            <summary>
                Drops all user created indices over all collections in database
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.Internal.ArangoIndexModule.ListAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Ignores primary and edge indices
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.Internal.ArangoUserModule.CreateAsync(Core.Arango.Protocol.ArangoUser,System.Threading.CancellationToken)">
            <summary>
                Create a new user
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.Internal.ArangoUserModule.ListAsync(System.Threading.CancellationToken)">
            <summary>
                List available users
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.Internal.ArangoUserModule.SetDatabaseAccessAsync(Core.Arango.ArangoHandle,System.String,Core.Arango.Protocol.ArangoAccess,System.Threading.CancellationToken)">
            <summary>
                Set the database access level
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.Internal.ArangoUserModule.DeleteDatabaseAccessAsync(Core.Arango.ArangoHandle,System.String,System.Threading.CancellationToken)">
            <summary>
                Clear the database access level, revert back to the default access level
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.Internal.ArangoUserModule.PatchAsync(Core.Arango.Protocol.ArangoUser,System.Threading.CancellationToken)">
            <summary>
                Modify attributes of an existing user
            </summary>
        </member>
        <member name="M:Core.Arango.Modules.Internal.ArangoUserModule.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                Delete a user permanently.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoAccess">
            <summary>
                User access modes for database and collection
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAccess.None">
            <summary>
                No access
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAccess.ReadOnly">
            <summary>
                Read access only
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAccess.ReadWrite">
            <summary>
                Read and write access
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoAnalyzer">
            <summary>
                ArangoSearch Analyzer
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzer.Name">
            <summary>
                The Analyzer name.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzer.Type">
            <summary>
                The Analyzer type.
            </summary>
            <example>
            </example>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzer.Properties">
            <summary>
                The properties used to configure the specified Analyzer type.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzer.Features">
            <summary>
                The set of features to set on the Analyzer generated fields. The default value is an empty array.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzer.ExtensionData">
            <summary>
             Overflow properties
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoAnalyzerCase">
            <summary>
                AnalyzerType
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerCase.Lower">
            <summary>
                To convert to all lower-case characters (default)
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerCase.Upper">
            <summary>
                To convert to all upper-case characters
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerCase.None">
            <summary>
                To not change character case
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoAnalyzerGeoJsonType">
            <summary>
                ArangoGeoJsonType
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerGeoJsonType.Shape">
            <summary>
                index all GeoJSON geometry types (Point, Polygon etc.)
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerGeoJsonType.Centroid">
            <summary>
                compute and only index the centroid of the input geometry
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerGeoJsonType.Point">
            <summary>
                only index GeoJSON objects of type Point, ignore all other geometry types
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoAnalyzerProperties">
            <summary>
                ArangoSearch Analyzer Properties
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Locale">
            <summary>
                (Stem | Norm | Text) A locale in the format language[_COUNTRY][.encoding][@variant]
            </summary>
            <example>
                "de.utf-8" or "en_US.utf-8"
            </example>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Case">
            <summary>
                (Text | Norm) Character conversion
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Stopwords">
            <summary>
                (Text | Stopwords)
                An array of strings with words to omit from result.
                Default: load words from stopwordsPath.
                To disable stop-word filtering provide an empty array [].
                If both stopwords and stopwordsPath are provided then both word sources are combined.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.StopwordsPath">
            <summary>
                (Text)
                Path with a language sub-directory containing files with words to omit.
                Each word has to be on a separate line.
                Everything after the first whitespace character on a line will be ignored and can be used for comments.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Accent">
            <summary>
                (Text | Norm) To preserve accented characters or to convert accented characters to their base characters (default)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Stemming">
            <summary>
                (Text) To apply stemming on returned words (default) or to leave the tokenized words as-is.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.EdgeNgram">
            <summary>
                (Text) If present, then edge n-grams are generated for each token (word)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Delimiter">
            <summary>
                (Delimiter) The delimiting character(s)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.QueryString">
            <summary>
                (Aql) AQL query to be executed
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.CollapsePositions">
            <summary>
                (Aql)  true: set the position to 0 for all members of the query result array.  false (default): set the position
                corresponding to the index of the result array member
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.KeepNull">
            <summary>
                (Aql)  true (default): treat null like an empty string | false: discard nulls from View index. Can be used for
                index filtering (i.e. make your query return null for unwanted data). Note that empty results are always discarded.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.BatchSize">
            <summary>
                (Aql) number between 1 and 1000 (default = 1) that determines the batch size for reading data from the query. In
                general, a single token is expected to be returned. However, if the query is expected to return many results, then
                increasing batchSize trades memory for performance.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.MemoryLimit">
            <summary>
                (Aql) memory limit for query execution in bytes. (default is 1048576 = 1Mb) Maximum is 33554432U (32Mb)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Pipeline">
            <summary>
                (Pipeline) an array of Analyzer definition-like objects with type and properties attributes
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Latitude">
            <summary>
                (GeoPoint) array of strings that describes the attribute path of the latitude value relative to the field for which
                the Analyzer is defined in the View
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Longitude">
            <summary>
                (GeoPoint) array of strings that describes the attribute path of the longitude value relative to the field for
                which the Analyzer is defined in the View
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.Type">
            <summary>
                (GeoJson)  (default): index all GeoJSON geometry types (Point, Polygon etc.)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoAnalyzerProperties.ExtensionData">
            <summary>
             Overflow properties
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoAnalyzerType">
            <summary>
                AnalyzerType
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Identity">
            <summary>
                Treat value as atom (no transformation)
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Delimiter">
            <summary>
                Split into tokens at user-defined character
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Stem">
            <summary>
                Apply stemming to the value as a whole
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Norm">
            <summary>
                Apply normalization to the value as a whole
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Ngram">
            <summary>
                Create n-grams from value with user-defined lengths
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Text">
            <summary>
                Tokenize into words, optionally with stemming, normalization, stop-word filtering and edge n-gram generation
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Stopwords">
            <summary>
                An Analyzer capable of removing specified tokens from the input.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Pipeline">
            <summary>
                An Analyzer capable of chaining effects of multiple Analyzers into one.
                The pipeline is a list of Analyzers, where the output of an Analyzer is passed to the next for further processing.
                The final token value is determined by last Analyzer in the pipeline.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.Aql">
            <summary>
                An Analyzer capable of running a restricted AQL query to perform data manipulation / filtering.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.GeoJson">
            <summary>
                An Analyzer capable of breaking up a GeoJSON object into a set of indexable tokens for further usage with
                ArangoSearch Geo functions.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoAnalyzerType.GeoPoint">
            <summary>
                An Analyzer capable of breaking up JSON object describing a coordinate into a set of indexable tokens for further
                usage with ArangoSearch Geo functions.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoBackup">
            <summary>
                Arango HotBackup
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.Id">
            <summary>
                Unique identifier
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.Version">
            <summary>
                ArangoDB version
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.Keys">
            <summary>
                Keys
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.SizeInBytes">
            <summary>
                SizeInBytes
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.NrFiles">
            <summary>
                Number of files
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.NrDbServers">
            <summary>
                Number of database servers
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.Available">
            <summary>
                is available?
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.NrPiecesPresent">
            <summary>
                Number of pieces present
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackup.PotentiallyInconsistent">
            <summary>
                Is potentially inconsistent?
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoBackupRequest">
            <summary>
                Arango HotBackup request
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackupRequest.Label">
            <summary>
                The label for this backup.
                The label is used together with a timestamp string create a unique backup identifier, {timestamp}_{label}.
                If no label is specified, the empty string is assumed and a default UUID is created for this part of the ID.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackupRequest.Timeout">
            <summary>
                The time in seconds that the operation tries to get a consistent snapshot. The default is 120 seconds.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackupRequest.AllowInconsistent">
            <summary>
                If this flag is set to true and no global transaction lock can be acquired within the given timeout, a possibly
                inconsistent backup is taken.
                The default for this flag is false and in this case a timeout results in an HTTP 408 error.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoBackupRequest.Force">
            <summary>
                If this flag is set to true and no global transaction lock can be acquired within the given timeout, all running
                transactions are forcefully aborted to ensure that a consistent backup can be created.
                This does not include JavaScript transactions.
                It waits for the transactions to be aborted at most timeout seconds.
                Thus using force the request timeout is doubled. To abort transactions is almost certainly not what you want for
                your application.
                In the presence of intermediate commits it can even destroy the atomicity of your transactions.
                Use at your own risk, and only if you need a consistent backup at all costs.
                The default and recommended value is false.
                If both allowInconsistent and force are set to true, then the latter takes precedence and transactions are aborted.
                This is only available in the cluster.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoCollection">
            <summary>
                Arango collection
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.Name">
            <summary>
                The name of the collection.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.Type">
            <summary>
                The type of the collection to create.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.IsSystem">
            <summary>
                If true, create a system collection.
                In this case collection-name should start with an underscore.
                End users should normally create non-system collections only. API implementors may be required to create system
                collections in very special occasions, but normally a regular collection will do. (The default is false)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.NumberOfShards">
            <summary>
                (The default is 1): in a cluster, this value determines the number of shards to create for the collection.
                In a single server setup, this option is meaningless.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.KeyOptions">
            <summary>
                Additional options for key generation.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.ShardKeys">
            <summary>
                (The default is [ “_key” ]): in a cluster, this attribute determines which document attributes are used to
                determine the target shard for documents.
                Documents are sent to shards based on the values of their shard key attributes.
                The values of all shard key attributes in a document are hashed, and the hash value is used to determine the target
                shard. Note: Values of shard key attributes cannot be changed once set.
                This option is meaningless in a single server setup.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.ReplicationFactor">
            <summary>
                (The default is 1): in a cluster, this attribute determines how many copies of each shard are kept on different
                DB-Servers.
                The value 1 means that only one copy (no synchronous replication) is kept.
                A value of k means that k-1 replicas are kept.
                It can also be the string "satellite" for a SatelliteCollection, where the replication factor is matched to the
                number of DB-Servers (Enterprise Edition only).
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.ShardingStrategy">
            <summary>
                This attribute specifies the name of the sharding strategy to use for the collection.
                Since ArangoDB 3.4 there are different sharding strategies to select from when creating a new collection. The
                selected shardingStrategy value will remain fixed for the collection and cannot be changed afterwards.
                This is important to make the collection keep its sharding settings and always find documents already distributed
                to shards using the same initial sharding algorithm.
                community-compat, enterprise-compat, enterprise-smart-edge-compat, hash, enterprise-hash-smart-edge
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.DistributeShardsLike">
            <summary>
                (The default is ”“): in an Enterprise Edition cluster, this attribute binds the specifics of sharding for the newly
                created collection to follow that of a specified existing collection.
                Note: Using this parameter has consequences for the prototype collection.
                It can no longer be dropped, before the sharding-imitating collections are dropped.
                Equally, backups and restores of imitating collections alone will generate warnings (which can be overridden) about
                missing sharding prototype.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.WriteConcern">
            <summary>
                Write concern for this collection (default: 1).
                It determines how many copies of each shard are required to be in sync on the different DB-Servers.
                If there are less then these many copies in the cluster a shard will refuse to write.
                Writes to shards with enough up-to-date copies will succeed at the same time however.
                The value of writeConcern can not be larger than replicationFactor. (cluster only)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollection.SmartJoinAttribute">
            <summary>
                In an Enterprise Edition cluster, this attribute determines an attribute of the collection that must contain the
                shard key value of the referred-to SmartJoin collection.
                Additionally, the shard key for a document in this collection must contain the value of this attribute, followed by
                a colon, followed by the actual primary key of the document.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoCollectionType">
            <summary>
                Arango collection type
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoCollectionType.Document">
            <summary>
                document collection
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoCollectionType.Edge">
            <summary>
                edge collection
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoCollectionUpdate">
            <summary>
                Arango collections updatable properties
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollectionUpdate.WaitForSync">
            <summary>
                If true then the data is synchronized to disk before returning from a document create, update, replace or removal
                operation. (default: false)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoCollectionUpdate.Schema">
            <summary>
                Optional object that specifies the collection level schema for documents.
                When updating collection this needs to contain existing schema or schema will be removed
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoEdgeDefinition">
            <summary>
                Edge definition
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeDefinition.Collection">
            <summary>
                The name of the edge collection to be used.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeDefinition.From">
            <summary>
                One or many vertex collections that can contain source vertices.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeDefinition.To">
            <summary>
                One or many vertex collections that can contain target vertices.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoEdgeNgram">
            <summary>
                N-grams for substring matching
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeNgram.Min">
            <summary>
                (Ngram) unsigned integer for the minimum n-gram length
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeNgram.Max">
            <summary>
                (Ngram) unsigned integer for the maximum n-gram length
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeNgram.PreserveOriginal">
            <summary>
                (Ngram) to include the original value as well (true) or to produce the n-grams based on min and max only (false)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeNgram.StartMarker">
            <summary>
                (Ngram) This value will be prepended to n-grams which include the beginning of the input.
                Can be used for matching prefixes.
                Choose a character or sequence as marker which does not occur in the input.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeNgram.EndMarker">
            <summary>
                (Ngram)  this value will be appended to n-grams which include the end of the input.
                Can be used for matching suffixes.
                Choose a character or sequence as marker which does not occur in the input.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeNgram.StreamType">
            <summary>
                (Ngram) type of the input stream
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoEdgeResponse`1">
            <summary>
                Arango Graph Edge Response
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeResponse`1.Edge">
            <summary>
                Edge
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeResponse`1.New">
            <summary>
                New version
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeResponse`1.Old">
            <summary>
                Old version
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoEdgeResponse`1.Removed">
            <summary>
                When Removed
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoError">
            <summary>
                Arango Error Description
            </summary>
        </member>
        <member name="M:Core.Arango.Protocol.ArangoError.#ctor(System.String,Core.Arango.ArangoErrorCode)">
            Arango Error Description
            <param name="errorMessage">message</param>
            <param name="errorNumber">code</param>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoError.ErrorMessage">
            <summary>
                Message
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoError.ErrorNumber">
            <summary>
                Code
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoFoxxService">
            <summary>
                Foxx Service Description
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoFoxxService.Mount">
            <summary>
                the mount path of the service
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoFoxxService.Development">
            <summary>
                true if the service is running in development mode
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoFoxxService.Legacy">
            <summary>
                true if the service is running in 2.8 legacy compatibility mode
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoFoxxService.Name">
            <summary>
                a string identifying the service type
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoFoxxService.Version">
            <summary>
                a semver-compatible version string
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoFoxxSource">
            <summary>
                Foxx service installation source
            </summary>
        </member>
        <member name="M:Core.Arango.Protocol.ArangoFoxxSource.FromZip(System.IO.Stream)">
            <summary>
                Foxx service from zip archive
            </summary>
        </member>
        <member name="M:Core.Arango.Protocol.ArangoFoxxSource.FromJavaScript(System.String)">
            <summary>
                Foxx service from single javascript file
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoFunctionDefinition">
            <summary>
                Arango User Functions
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoFunctionDefinition.Name">
            <summary>
                The fully qualified name of the user functions.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoFunctionDefinition.Code">
            <summary>
                A string representation of the function body.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoFunctionDefinition.IsDeterministic">
            <summary>
                An optional boolean value to indicate whether the function results are fully deterministic (function return value
                solely depends on the input value and return value is the same for repeated calls with same input).
                The isDeterministic attribute is currently not used but may be used later for optimizations.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoGraph">
            <summary>
                Arango Graph Description
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraph.Name">
            <summary>
                Name of the graph.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraph.EdgeDefinitions">
            <summary>
                An array of definitions for the relations of the graph. Each has the following type:
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraph.OrphanCollections">
            <summary>
                An array of additional vertex collections. Documents within these collections do not have edges within this graph.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraph.IsSmart">
            <summary>
                Define if the created graph should be smart (Enterprise Edition only).
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraph.IsDisjoint">
            <summary>
                Whether to create a Disjoint SmartGraph instead of a regular SmartGraph (Enterprise Edition only).
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraph.Options">
            <summary>
                JSON object to define options for creating collections within this graph. It can contain the following attributes:
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraph.ExtensionData">
            <summary>
             Overflow properties
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoGraphOptions">
            <summary>
                Arango Graph Options
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraphOptions.SmartGraphAttribute">
            <summary>
                Only has effect in Enterprise Edition and it is required if isSmart is true. The attribute name that is used to
                smartly shard the vertices of a graph. Every vertex in this SmartGraph has to have this attribute. Cannot be
                modified later.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraphOptions.NumberOfShards">
            <summary>
                The number of shards that is used for every collection within this graph. Cannot be modified later.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraphOptions.ReplicationFactor">
            <summary>
                The replication factor used when initially creating collections for this graph. Can be set to "satellite" to create
                a SatelliteGraph, which will ignore numberOfShards, minReplicationFactor and writeConcern (Enterprise Edition
                only).
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraphOptions.WriteConcern">
            <summary>
                Write concern for new collections in the graph. It determines how many copies of each shard are required to be in
                sync on the different DB-Servers. If there are less then these many copies in the cluster a shard will refuse to
                write. Writes to shards with enough up-to-date copies will succeed at the same time however. The value of
                writeConcern can not be larger than replicationFactor. (cluster only)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoGraphOptions.ExtensionData">
            <summary>
             Overflow properties
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoIndex">
            <summary>
                Arango index
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.Id">
            <summary>
                The identifier of the index
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.Name">
            <summary>
                Name of the index or null for auto generation
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.Type">
            <summary>
                Type of the index
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.Fields">
            <summary>
                (Hash | Skiplist) An array of attribute paths.
                (TTL | Fulltext) An array with exactly one attribute path.
                (Geo) An array with one or two attribute paths.
                If it is an array with one attribute path location, then a geo-spatial index on all documents is created using
                location as path to the coordinates.
                The value of the attribute must be an array with at least two double values.
                The array must contain the latitude (first value) and the longitude (second value).
                All documents, which do not have the attribute path or with value that are not suitable, are ignored.
                If it is an array with two attribute paths latitude and longitude, then a geo-spatial index on all documents is
                created using latitude and longitude as paths the latitude and the longitude.
                The value of the attribute latitude and of the attribute longitude must a double.
                All documents, which do not have the attribute paths or which values are not suitable, are ignored.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.MinLength">
            <summary>
                (Fulltext)  Minimum character length of words to index.
                Will default to a server-defined value if unspecified.
                It is thus recommended to set this value explicitly when creating the index.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.GeoJson">
            <summary>
                (Geo) If a geo-spatial index on a location is constructed and geoJson is true, then the order within the array is
                longitude followed by latitude.
                This corresponds to the format described in http://geojson.org/geojson-spec.html#positions
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.Sparse">
            <summary>
                (Hash | SkipList)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.Unique">
            <summary>
                (Hash | SkipList) Note: Unique indexes on non-shard keys are not supported in a cluster.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.InBackground">
            <summary>
                Indexes can also be created in “background”, not using an exclusive lock during the entire index creation.
                Background index creation might be slower than the “foreground” index creation and require more RAM.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.Deduplicate">
            <summary>
                (Hash | SkipList) Controls whether inserting duplicate index values from the same document into a unique array
                index will lead to a unique constraint error or not.
                The default value is true, so only a single instance of each non-unique index value will be inserted into the index
                per document.
                Trying to insert a value into the index that already exists in the index will always fail, regardless of the value
                of this attribute.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.Estimate">
            <summary>
                (Hash | SkipList) Doc?
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoIndex.ExpireAfter">
            <summary>
                (TTL) The time (in seconds) after a document’s creation after which the documents count as “expired”.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoIndexType">
            <summary>
                Arango Index Type
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoIndexType.Hash">
            <summary>
                Hash - for exact matches
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoIndexType.Skiplist">
            <summary>
                Skiplist index - for number/date/string range matches
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoIndexType.Ttl">
            <summary>
                Time to Live index
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoIndexType.Geo">
            <summary>
                Geo-spatial index
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoIndexType.Fulltext">
            <summary>
                Fulltext index - Better use ArangoSearch Views
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoIndexType.Edge">
            <summary>
                (System) Edge Index
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoIndexType.Primary">
            <summary>
                (System) Primary Index
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoKeyOptions">
            <summary>
                Arango collection key generating options
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoKeyOptions.Type">
            <summary>
                Specifies the type of the key generator.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoKeyOptions.AllowUserKeys">
            <summary>
                If set to true, then it is allowed to supply own key values in the _key attribute of a document.
                If set to false, then the key generator will solely be responsible for generating keys and supplying own key values
                in the _key attribute of documents is considered an error.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoKeyOptions.Increment">
            <summary>
                increment value for autoincrement key generator. Not used for other key generator types.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoKeyOptions.Offset">
            <summary>
                Initial offset value for autoincrement key generator. Not used for other key generator types.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoKeyType">
            <summary>
                Arango key generation type
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoKeyType.Traditional">
            <summary>
                The traditional key generator generates numerical keys in ascending order.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoKeyType.Autoincrement">
            <summary>
                The autoincrement key generator generates numerical keys in ascending order, the initial offset and the spacing can
                be configured
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoKeyType.Uuid">
            <summary>
                The uuid key generator generates universally unique 128 bit keys, which are stored in hexadecimal human-readable
                format.
                This key generator can be used in a single-server or cluster to generate “seemingly random” keys.
                The keys produced by this key generator are not lexicographically sorted.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoKeyType.Padded">
            <summary>
                The padded key generator generates keys of a fixed length (16 bytes) in ascending lexicographical sort order.
                This is ideal for usage with the RocksDB engine, which will slightly benefit keys that are inserted in
                lexicographically ascending order.
                The key generator can be used in a single-server or cluster
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoLinkProperty">
            <summary>
                Arango View Link Property
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoLinkProperty.Analyzers">
            <summary>
                A list of Analyzers, by name as defined via the Analyzers, that should be applied to values of processed document
                attributes.
                default: [ "identity" ]
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoLinkProperty.IncludeAllFields">
            <summary>
                If set to true, then process all document attributes. Otherwise, only consider attributes mentioned in fields.
                Attributes not explicitly specified in fields will be processed with default link properties, i.e. {}.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoLinkProperty.TrackListPositions">
            <summary>
                If set to true, then for array values track the value position in arrays.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoLinkProperty.StoreValues">
            <summary>
                none: Do not store values with the view.
                id: Store information about value presence to allow use of the EXISTS() function
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoLinkProperty.Fields">
            <summary>
                An object of fields that should be processed at each level of the document.
                Each key specifies the document attribute to be processed.
                Note that the value of includeAllFields is also consulted when selecting fields to be processed.
                It is a recursive data structure.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoNgramStreamType">
            <summary>
                N-gram stream type
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoNgramStreamType.Binary">
            <summary>
                One byte is considered as one character (default)
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoNgramStreamType.Utf8">
            <summary>
                one Unicode codepoint is treated as one character
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoOverwriteMode">
            <summary>
                Requires ArangoDB 3.7
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoOverwriteMode.Ignore">
            <summary>
                If a document with the specified _key value exists already, nothing will be done and no write operation will be
                carried out.
                The insert operation will return success in this case. This mode does not support returning the old document
                version using RETURN OLD.
                When using RETURN NEW, null will be returned in case the document already existed.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoOverwriteMode.Replace">
            <summary>
                If a document with the specified _key value exists already, it will be overwritten with the specified document
                value.
                This mode will also be used when no overwrite mode is specified but the overwrite flag is set to true.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoOverwriteMode.Update">
            <summary>
                If a document with the specified _key value exists already, it will be patched (partially updated) with the
                specified document value.
                The overwrite mode can be further controlled via the keepNull and mergeObjects parameters.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoOverwriteMode.Conflict">
            <summary>
                If a document with the specified _key value exists already, return a unique constraint violation error so that the
                insert operation fails.
                This is also the default behavior in case the overwrite mode is not set, and the overwrite flag is false or not set
                either.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoQueryStatistic">
            <summary>
                Arango Query Statistic
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoQueryStatistic.ScannedFull">
            <summary>
                Documents processed with a full collection scan
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoQueryStatistic.ScannedIndex">
            <summary>
                Documents processed with a index scan
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoQueryStatistic.WritesExecuted">
            <summary>
                Documents which have been written
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoQueryStatistic.PeakMemoryUsage">
            <summary>
                Memory usage in bytes
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoQueryStatistic.ExecutionTime">
            <summary>
                Execution time in ms
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoQueryStatistic.FullCount">
            <summary>
                Result size ignoring LIMIT clause
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoQueryStatistic.WritesIgnored">
            <summary>
                Document writes ignored
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoQueryStatistic.Filtered">
            <summary>
                Filtered documents
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoResponseBase">
            <summary>
                Base response model
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoResponseBase.Code">
            <summary>
                HTTP Status Code
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoResponseBase.Error">
            <summary>
                Has Error?
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoResponseBase.ErrorMessage">
            <summary>
                Error Message
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoResponseBase.ErrorNum">
            <summary>
                Error Code
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoSchema">
            <summary>
                Schema Validation
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoSchema.Rule">
            <summary>
                The rule attribute must contain the JSON Schema description.
            </summary>
            <example>
                {
                properties: { nums: { type: "array", items: { type: "number", maximum: 6 } } },
                additionalProperties: { type: "string" },
                required: ["nums"]
                }
            </example>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoSchema.Level">
            <summary>
                controls when the validation will be applied.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoSchema.Message">
            <summary>
                sets the message that will be used when validation fails.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoSchemaLevel">
            <summary>
                Arango schema validation level
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoSchemaLevel.None">
            <summary>
                The rule is inactive and validation thus turned off.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoSchemaLevel.New">
            <summary>
                Only newly inserted documents are validated.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoSchemaLevel.Moderate">
            <summary>
                New and modified documents must pass validation, except for modified documents where the OLD value did not pass
                validation already.
                This level is useful if you have documents which do not match your target structure, but you want to stop the
                insertion of more invalid documents and prohibit that valid documents are changed to invalid documents.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoSchemaLevel.Strict">
            <summary>
                All new and modified document must strictly pass validation. No exceptions are made (default).
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoSort">
            <summary>
                ArangoView Sort description
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoSort.Field">
            <summary>
                Attribute to sort by
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoSort.Direction">
            <summary>
                Sort direction
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoSort.ExtensionData">
            <summary>
             Overflow properties
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoTransaction">
            <summary>
                Arango JavaScript transaction
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransaction.AllowImplicit">
            <summary>
                Allow reading from undeclared collections.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransaction.Collections">
            <summary>
                Collections must be a JSON object that can have one or all sub-attributes read, write or exclusive, each being an
                array of collection names or a single collection name as string.
                Collections that will be written to in the transaction must be declared with the write or exclusive attribute or it
                will fail, whereas non-declared collections from which is solely read will be added lazily.
                The optional sub-attribute allowImplicit can be set to false to let transactions fail in case of undeclared
                collections for reading.
                Collections for reading should be fully declared if possible, to avoid deadlocks. See locking and isolation for
                more information.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransaction.Action">
            <summary>
                The actual transaction operations to be executed, in the form of stringified JavaScript code.
                The code will be executed on server side, with late binding.
                It is thus critical that the code specified in action properly sets up all the variables it needs.
                If the code specified in action ends with a return statement, the value returned will also be returned by the REST
                API in the result attribute if the transaction committed successfully.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransaction.WaitForSync">
            <summary>
                An optional boolean flag that, if set, will force the transaction to write all data to disk before returning.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransaction.LockTimeout">
            <summary>
                An optional numeric value that can be used to set a timeout for waiting on collection locks.
                If not specified, a default value will be used.
                Setting lockTimeout to 0 will make ArangoDB not time out waiting for a lock.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransaction.Params">
            <summary>
                Optional arguments passed to action.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransaction.MaxTransactionSize">
            <summary>
                Transaction size limit in bytes. Honored by the RocksDB storage engine only.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoTransactionScope">
            <summary>
                Arango Transaction Scope
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransactionScope.Read">
            <summary>
                Collections to read from
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoTransactionScope.Write">
            <summary>
                Collections to write to
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoUpdateResult`1">
            <summary>
                Arango document update result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUpdateResult`1.Id">
            <summary>
                Id
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUpdateResult`1.Key">
            <summary>
                Key
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUpdateResult`1.Revision">
            <summary>
                Revision
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUpdateResult`1.OldRevision">
            <summary>
                Old Revision
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUpdateResult`1.Old">
            <summary>
                Old document
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUpdateResult`1.New">
            <summary>
                New document
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoUser">
            <summary>
                Arango User
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUser.Name">
            <summary>
                The name of the user as a string. This is mandatory.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUser.Password">
            <summary>
                The user password as a string. If no password is specified, the empty string will be used.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUser.Active">
            <summary>
                An optional flag that specifies whether the user is active. If not specified, this will default to true
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoUser.Extra">
            <summary>
                An optional JSON object with arbitrary extra data about the user.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoVersion">
            <summary>
                Arango Server Version and License Information
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoVersion.Version">
            <summary>
                Raw version string
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoVersion.License">
            <summary>
                license string
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoVersion.SemanticVersion">
            <summary>
                Parsed (comparable) version
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoVertexCollection">
            <summary>
                Arango Vertex Collection
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoVertexCollection.Collection">
            <summary>
                Collection name
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoVertexResponse`1">
            <summary>
                Arango Graph Vertex Response
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoVertexResponse`1.Vertex">
            <summary>
                Vertex
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoVertexResponse`1.New">
            <summary>
                New version
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoVertexResponse`1.Old">
            <summary>
                Old version
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoVertexResponse`1.Removed">
            <summary>
                When Removed
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoView">
            <summary>
                ArangoSearch View
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.Name">
            <summary>
                The name of the View.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.Type">
            <summary>
                The type of the View. Must be equal to “arangosearch”. This option is immutable.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.Links">
            <summary>
                Expects an object with the attribute keys being names of to be linked collections, and the link properties as
                attribute values.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.PrimarySort">
            <summary>
                A primary sort order can be defined to enable an AQL optimization.
                If a query iterates over all documents of a View, wants to sort them by attribute values and the (left-most) fields
                to sort by as well as their sorting direction match with the primarySort definition, then the SORT operation is
                optimized away.
                This option is immutable.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.PrimarySortCompression">
            <summary>
                Defines how to compress the primary sort data (introduced in v3.7.1). ArangoDB v3.5 and v3.6 always compress the
                index using LZ4.
                This option is immutable.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.StoredValues">
            <summary>
                An array of objects to describe which document attributes to store in the View index (introduced in v3.7.1).
                It can then cover search queries, which means the data can be taken from the index directly and accessing the
                storage engine can be avoided.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.CleanupIntervalStep">
            <summary>
                Wait at least this many commits between removing unused files in the ArangoSearch data directory (default: 2, to
                disable use: 0).
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.CommitIntervalMsec">
            <summary>
                Wait at least this many milliseconds between committing View data store changes and making documents visible to
                queries (default: 1000, to disable use: 0)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.ConsolidationPolicy">
            <summary>
                The consolidation policy to apply for selecting which segments should be merged
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.ConsolidationIntervalMsec">
            <summary>
                Wait at least this many milliseconds between applying ‘consolidationPolicy’ to consolidate View data store and
                possibly release space on the filesystem (default: 10000, to disable use: 0).
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.WritebufferIdle">
            <summary>
                Maximum number of writers (segments) cached in the pool (default: 64, use 0 to disable, immutable)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.WritebufferActive">
            <summary>
                Maximum number of concurrent active writers (segments) that perform a transaction. Other writers (segments) wait
                till current active writers (segments) finish (default: 0, use 0 to disable, immutable)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.WritebufferSizeMax">
            <summary>
                Maximum memory byte size per writer (segment) before a writer (segment) flush is triggered.
                0 value turns off this limit for any writer (buffer) and data will be flushed periodically based on the value
                defined for the flush thread (ArangoDB server startup option).
                0 value should be used carefully due to high potential memory consumption (default: 33554432, use 0 to disable,
                immutable)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoView.ExtensionData">
            <summary>
             Overflow properties
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoViewCompressionType">
            <summary>
                Arango View Compression
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoViewCompressionType.Lz4">
            <summary>
                LZ4
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoViewCompressionType.None">
            <summary>
                None
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoSortDirection">
            <summary>
                Arango View Compression
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoSortDirection.Asc">
            <summary>
                Ascending
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoSortDirection.Desc">
            <summary>
                Descending
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoViewConsolidationPolicy">
            <summary>
                Arango View Consolidation Policy
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewConsolidationPolicy.Type">
            <summary>
                The segment candidates for the “consolidation” operation are selected based upon several possible configurable
                formulas as defined by their types.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewConsolidationPolicy.Threshold">
            <summary>
                value in the range [0.0, 1.0]
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewConsolidationPolicy.SegmentsBytesFloor">
            <summary>
                Defines the value (in bytes) to treat all smaller segments as equal for consolidation selection (default: 2097152)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewConsolidationPolicy.SegmentsBytesMax">
            <summary>
                Maximum allowed size of all consolidated segments in bytes (default: 5368709120)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewConsolidationPolicy.SegmentsMax">
            <summary>
                The maximum number of segments that will be evaluated as candidates for consolidation (default: 10)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewConsolidationPolicy.SegmentsMin">
            <summary>
                The minimum number of segments that will be evaluated as candidates for consolidation (default: 1)
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewConsolidationPolicy.MinScore">
            <summary>
                ?
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewConsolidationPolicy.ExtensionData">
            <summary>
             Overflow properties
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoViewConsolidationType">
            <summary>
                Arango View Consolidation Type
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoViewConsolidationType.Tier">
            <summary>
                (default): consolidate based on segment byte size and live document count as dictated by the customization
                attributes.
                If this type is used, then below segments* and minScore properties are available.
            </summary>
        </member>
        <member name="F:Core.Arango.Protocol.ArangoViewConsolidationType.BytesAccum">
            <summary>
                Consolidate if and only if {threshold} > (segment_bytes + sum_of_merge_candidate_segment_bytes) / all_segment_bytes
                i.e. the sum of all candidate segment byte size is less than the total segment byte size multiplied by the
                {threshold}.
                If this type is used, then below threshold property is available.
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoViewInformation">
            <summary>
              Arango View Information
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewInformation.Name">
            <summary>
                The name of the View.
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewInformation.GloballyUniqueId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewInformation.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewInformation.Type">
            <summary>
            
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoViewStoredValue">
            <summary>
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewStoredValue.Fields">
            <summary>
                Attribute paths to store
            </summary>
        </member>
        <member name="P:Core.Arango.Protocol.ArangoViewStoredValue.Compression">
            <summary>
                Compression
            </summary>
        </member>
        <member name="T:Core.Arango.Protocol.ArangoVoid">
            <summary>
                Something to deserialize to when no response needed
            </summary>
        </member>
        <member name="T:Core.Arango.Serialization.IArangoFormattable">
            <summary>
                Special interface for custom formattable query parts
            </summary>
        </member>
        <member name="T:Core.Arango.Serialization.IArangoSerializer">
            <summary>
                Arango Serializer Interface
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.IArangoSerializer.Serialize(System.Object)">
            <summary>
                Convert object to string
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.IArangoSerializer.Deserialize``1(System.String)">
            <summary>
                Convert string to object
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.IArangoSerializer.Deserialize(System.String,System.Type)">
            <summary>
                Convert string to object
            </summary>
        </member>
        <member name="T:Core.Arango.Serialization.Json.ArangoJsonCamelCasePolicy">
            <summary>
                System.Json.Text PascalCase Naming Policy for Arango
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Json.ArangoJsonCamelCasePolicy.ConvertName(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.Serialization.Json.ArangoJsonDefaultPolicy">
            <summary>
                System.Json.Text PascalCase Naming Policy for Arango
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Json.ArangoJsonDefaultPolicy.ConvertName(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.Serialization.Json.ArangoJsonSerializer">
            <summary>
                Arango Json Serializer with System.Json.Text
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Json.ArangoJsonSerializer.#ctor(System.Text.Json.JsonNamingPolicy)">
            <summary>
            </summary>
            <param name="policy">PascalCase or camelCase policy</param>
        </member>
        <member name="M:Core.Arango.Serialization.Json.ArangoJsonSerializer.Serialize(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Serialization.Json.ArangoJsonSerializer.Deserialize``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Serialization.Json.ArangoJsonSerializer.Deserialize(System.String,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.Serialization.Json.JsonStringEnumMemberConverter">
            <summary>
                System.Text.Json EnumMember support
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Json.JsonStringEnumMemberConverter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Core.Arango.Serialization.Json.JsonStringEnumMemberConverter" /> class.
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Json.JsonStringEnumMemberConverter.#ctor(System.Text.Json.JsonNamingPolicy,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Core.Arango.Serialization.Json.JsonStringEnumMemberConverter" /> class.
            </summary>
            <param name="namingPolicy">
                Optional naming policy for writing enum values.
            </param>
            <param name="allowIntegerValues">
                True to allow undefined enum values. When true, if an enum value isn't
                defined it will output as a number rather than a string.
            </param>
        </member>
        <member name="M:Core.Arango.Serialization.Json.JsonStringEnumMemberConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Serialization.Json.JsonStringEnumMemberConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Serialization.Json.JsonStringEnumMemberConverterHelper`1.GenerateJsonException(System.Type)">
            <summary>
                Generate a <see cref="T:System.Text.Json.JsonException" /> using the internal
                <c>JsonException.AppendPathInformation</c> property that will
                eventually include the JSON path, line number, and byte position in
                line.
                <para>
                    The final message of the exception looks like: The JSON value could
                    not be converted to {0}. Path: $.{JSONPath} | LineNumber:
                    {LineNumber} | BytePositionInLine: {BytePositionInLine}.
                </para>
            </summary>
            <param name="propertyType">Property type.</param>
            <returns><see cref="T:System.Text.Json.JsonException" />.</returns>
        </member>
        <member name="M:Core.Arango.Serialization.Json.JsonStringEnumMemberConverterHelper`1.GenerateJsonException(System.Type,System.String,System.Exception)">
            <summary>
                Generate a <see cref="T:System.Text.Json.JsonException" /> using the internal
                <c>JsonException.AppendPathInformation</c> property that will
                eventually include the JSON path, line number, and byte position in
                line.
                <para>
                    The final message of the exception looks like: The JSON value '{1}'
                    could not be converted to {0}. Path: $.{JSONPath} | LineNumber:
                    {LineNumber} | BytePositionInLine: {BytePositionInLine}.
                </para>
            </summary>
            <param name="propertyType">Property type.</param>
            <param name="propertyValue">
                Value that could not be parsed into
                property type.
            </param>
            <param name="innerException">Optional inner <see cref="T:System.Exception" />.</param>
            <returns><see cref="T:System.Text.Json.JsonException" />.</returns>
        </member>
        <member name="T:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftCamelCaseContractResolver">
            <summary>
                Newtonsoft camelCase Naming Policy for Arango
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftCamelCaseContractResolver.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftCamelCaseContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftDefaultContractResolver">
            <summary>
                System.Json.Text PascalCase Naming Policy for Arango
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftDefaultContractResolver.#ctor">
            <summary>
                System.Json.Text PascalCase Naming Policy for Arango
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftDefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftSerializer">
            <summary>
                Arango Json Serializer with Newtonsoft
            </summary>
        </member>
        <member name="M:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftSerializer.#ctor(Newtonsoft.Json.Serialization.IContractResolver)">
            <summary>
                Arango Json Serializer with Newtonsoft
            </summary>
            <param name="resolver">PascalCase or camelCaseResolver</param>
        </member>
        <member name="M:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftSerializer.Serialize(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftSerializer.Deserialize``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Serialization.Newtonsoft.ArangoNewtonsoftSerializer.Deserialize(System.String,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.Transport.ArangoHttpTransport">
            <summary>
                Arango HTTP 1.1/2.0 Transport Implementation
            </summary>
        </member>
        <member name="M:Core.Arango.Transport.ArangoHttpTransport.#ctor(Core.Arango.IArangoConfiguration)">
            <summary>
                Arango HTTP 1.1/2.0 Transport Implementation
            </summary>
        </member>
        <member name="M:Core.Arango.Transport.ArangoHttpTransport.SendAsync``1(System.Net.Http.HttpMethod,System.String,System.Object,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Transport.ArangoHttpTransport.SendContentAsync(System.Net.Http.HttpMethod,System.String,System.Net.Http.HttpContent,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Core.Arango.Transport.ArangoHttpTransport.SendAsync(System.Type,System.Net.Http.HttpMethod,System.String,System.Object,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Core.Arango.Transport.IArangoTransport">
            <summary>
                Arango Transport Interface
            </summary>
        </member>
        <member name="M:Core.Arango.Transport.IArangoTransport.SendAsync(System.Type,System.Net.Http.HttpMethod,System.String,System.Object,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                Send request to ArangoDB
            </summary>
        </member>
        <member name="M:Core.Arango.Transport.IArangoTransport.SendAsync``1(System.Net.Http.HttpMethod,System.String,System.Object,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                Send request to ArangoDB
            </summary>
        </member>
        <member name="M:Core.Arango.Transport.IArangoTransport.SendContentAsync(System.Net.Http.HttpMethod,System.String,System.Net.Http.HttpContent,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
                Send raw HTTP content request to ArangoDB
            </summary>
        </member>
    </members>
</doc>
